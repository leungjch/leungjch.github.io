{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///(webpack)/buildin/global.js"],"names":["NotFoundPage","title","href","g","this","Function","e","window","module","exports"],"mappings":"2FAAA,yDAaeA,UARM,kBACnB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,mBACX,mCACA,iDAA4B,iBAAGC,KAAK,KAAR,iB,mBCThC,IAAIC,EAGJA,EAAI,WACH,OAAOC,KADJ,GAIJ,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAXC,SAAqBJ,EAAII,QAOrCC,EAAOC,QAAUN","file":"component---src-pages-404-js-91a3e873f2171c014f92.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You hit an invalid page. <a href=\"/\"> Go home </a></p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}