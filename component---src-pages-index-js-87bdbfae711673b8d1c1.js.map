{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/components/header.js","webpack:///./src/pages/index.js"],"names":["Image","props","query","render","data","image","images","edges","find","n","node","relativePath","includes","filename","alt","fluid","childImageSharp","className","styles","zoom","style","margin","maxHeight","imgStyle","Header","headerText","background","marginBottom","maxWidth","defaultProps","siteTitle","Home","basicInfo","basicInfoYaml","basic_info","work","workYaml","projects","projectsYaml","console","log","title","dangerouslySetInnerHTML","__html","summary","id","map","index","key","listStyleType","place","class","flexDirection","justifyContent","float","duration","position","href","demo","test","img","autoplay","loop","muted","width","height","backgroundColor","padding","src","type","objectFit","objectPosition","linkdemo","length","repo","linkrepo","display","verticalAlign","alignItems","border","flexGrow","marginRight","name","description","keywords"],"mappings":"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","file":"component---src-pages-index-js-87bdbfae711673b8d1c1.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styles from '../styles/global.css'\n// Note: You can change \"images\" to whatever you'd like.\n\nconst Image = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 500) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.filename);\n      });\n      if (!image) {\n        return null;\n      }\n\n      //const imageSizes = image.node.childImageSharp.sizes; sizes={imageSizes}\n      return <Img alt={props.alt}  fluid={image.node.childImageSharp.fluid} \n      className={styles.zoom}\n      style={{ margin: '0rem', maxHeight: props.maxHeight}}\n            imgStyle={props.imgStyle}\n      />;\n    }}\n  />\n);\n\nexport default Image;","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ headerText }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        // padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0}}>\n          {headerText}\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { css } from \"@emotion/core\"\nimport styles from '../styles/global.css'\n\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\n\nexport default function Home({ data }) {\n\n  const basicInfo = data.basicInfoYaml.basic_info;\n  const work = data.workYaml.work;\n  const projects = data.projectsYaml.projects;\n\n  console.log(basicInfo, work, projects)\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n\n      <div>\n      {/* <h2> {basicInfo.email} </h2> */}\n\n      <div dangerouslySetInnerHTML={{ __html:basicInfo.summary}} />\n        <div id=\"work\">\n          <h1> Work</h1>\n          <ul style={{margin:\"1%\"}}>\n            {work.map((data, index) => {\n              return <li key={`work_${index}`} style={{listStyleType:\"none\"}}>\n                <h2>{data.place}</h2>\n                <div class=\"container\" style={{flexDirection:\"column\", justifyContent:\"space-between\"}}>\n                  <div class=\"item\" style={{float:\"right\"}}>{data.duration}</div>\n                  <div class=\"item\">{data.position}</div>\n                </div>\n\n                <p style={{margin:\"2%\"}}>{data.summary}</p>\n              </li>\n            })}\n          </ul>\n        </div>\n\n        <div id=\"projects\">\n          <h1>Projects</h1> \n          <p> I enjoy working on a variety of projects in my spare time. Check out <a href=\"https://github.com/leungjch\">my Github</a> to see more. </p>\n          <ul style={{margin:\"1%\"}}>\n            {projects.map((data, index) => {\n              var image;\n              var demo;\n              if (/[\\/.](webm)$/i.test(data.img)) // if img is gif, use <img> tag, else use Gatsby Image tag\n              {\n                image = <video autoplay = \"true\" loop=\"true\" muted = \"true\" style={{width:\"100%\", height:'auto', backgroundColor:\"white\", padding:\"10px\"}}> <source src={data.img} type = \"video/webm\" /> </video>\n              }\n              else\n              {\n                image = <Image filename={data.img} maxHeight={\"33vh\"}\n                imgStyle={{ objectFit: 'scale-down', objectPosition:\"right\"}}\n                className={styles.zoom}\n                  />\n              }\n              if (data.linkdemo.length > 0)\n              {\n                demo = <a href={data.linkdemo}>[demo]</a>\n              }\n              var repo = <a href={data.linkrepo}>[code]</a>\n              return <li key={`projects_${index}`} style={{listStyleType:\"none\"}}>\n                \n                  <div \n                  style={{display:\"flex\", flexDirection:\"row\",\n                  verticalAlign:\"middle\",\n                  alignItems:\"middle\", border:\"black\", marginBottom:\"5%\"}}\n                  >\n\n                    <div style={{flexGrow:1, width:\"30%\", marginRight:\"2%\",\n                                justifyContent:\"center\",\n                                \n                     }}>\n                      {image}\n                    </div>\n                    <div style={{width:\"70%\"}}>\n                      <h2 style={{margin: \"0% 0 2% 0\"}}>{data.name} {demo} {repo}</h2>\n                      <p>{data.description}</p>\n                      <p>Keywords: <strong>{data.keywords}</strong></p>\n                    </div>\n                </div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    basicInfoYaml {\n      basic_info {\n        name\n        image\n        email\n        phone\n        url\n        summary\n        location {\n          city\n          countryCode\n          region\n        }\n        social {\n          github\n        }\n      }\n    }\n\n    workYaml {\n      work {\n        place\n        duration\n        summary\n        position\n      }\n    }\n\n    projectsYaml {\n      projects {\n        name\n        keywords\n        description\n        img\n        linkrepo\n        linkdemo\n\n      }\n    }\n  }\n`\n\n  \n"],"sourceRoot":""}