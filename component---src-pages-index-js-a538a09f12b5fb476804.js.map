{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/pages/index.js","webpack:///./src/components/image.js"],"names":["Header","headerText","style","background","marginBottom","margin","maxWidth","defaultProps","siteTitle","Home","data","basicInfo","basicInfoYaml","basic_info","work","workYaml","projects","projectsYaml","console","log","title","marginRight","dangerouslySetInnerHTML","__html","summary","id","href","map","index","image","demo","test","img","autoplay","loop","muted","width","maxHeight","backgroundColor","padding","src","type","filename","imgStyle","objectFit","objectPosition","linkdemo","length","repo","linkrepo","key","listStyleType","marginLeft","display","flexDirection","verticalAlign","alignItems","border","className","flexGrow","justifyContent","name","description","keywords","query","Image","props","render","images","edges","find","n","node","relativePath","includes","alt","fluid","childImageSharp"],"mappings":"8QAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACb,sBACEC,MAAO,CACLC,WAAW,QACXC,aAAa,YAGf,mBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,MAIZ,kBAAIJ,MAAO,CAAEG,OAAQ,IAChBJ,MAUXD,EAAOO,aAAe,CACpBC,UAAU,IClBG,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACvBC,EAAYD,EAAKE,cAAcC,WAC/BC,EAAOJ,EAAKK,SAASD,KACrBE,EAAWN,EAAKO,aAAaD,SAGnC,OADAE,QAAQC,IAAIR,EAAWG,EAAME,GAE3B,YAAC,IAAD,CAAQI,MAAM,QACZ,YAAC,IAAD,CAAKA,MAAM,SAEX,mBAAKlB,MAAO,CAAEmB,YAAa,QAGzB,mBAAKC,wBAAyB,CAAEC,OAAQZ,EAAUa,WAElD,mBAAKC,GAAG,YACN,kCACA,qBACG,IADH,yGAGuC,IACrC,iBAAGC,KAAK,+BAAR,aAJF,gBAImE,KAEnE,kBAAIxB,MAAO,CAAEG,OAAQ,OAClBW,EAASW,KAAI,SAACjB,EAAMkB,GACnB,IAAIC,EACAC,EAGFD,EAFE,gBAAgBE,KAAKrB,EAAKsB,KAG1B,qBACEC,SAAS,OACTC,KAAK,OACLC,MAAM,OACNjC,MAAO,CACLkC,MAAO,OACPC,UAAW,OACXC,gBAAiB,QACjBC,QAAS,QAGV,IACD,sBAAQC,IAAK9B,EAAKsB,IAAKS,KAAK,eAAgB,KAK9C,YAAC,IAAD,CACEC,SAAUhC,EAAKsB,IACfK,UAAW,OACXM,SAAU,CACRC,UAAW,aACXC,eAAgB,WAKpBnC,EAAKoC,SAASC,OAAS,IACzBjB,EAAO,iBAAGJ,KAAMhB,EAAKoC,UAAd,WAET,IAAIE,EAAO,iBAAGtB,KAAMhB,EAAKuC,UAAd,UACX,OACE,kBACEC,IAAG,YAActB,EACjB1B,MAAO,CAAEiD,cAAe,OAAQC,WAAY,SAE5C,mBACElD,MAAO,CACLmD,QAAS,OACTC,cAAe,MACfC,cAAe,SACfC,WAAY,SACZC,OAAQ,QACRrD,aAAc,OAGhB,mBACEsD,UAAU,OACVxD,MAAO,CACLyD,SAAU,EACVvB,MAAO,MACPf,YAAa,KACb+B,WAAY,KACZQ,eAAgB,WAGjB/B,GAEH,mBAAK3B,MAAO,CAAEkC,MAAO,QACnB,kBAAIlC,MAAO,CAAEG,OAAQ,cAClBK,EAAKmD,KADR,IACe/B,EADf,IACsBkB,GAEtB,qBAAItC,EAAKoD,aACT,kCACY,0BAASpD,EAAKqD,qBAczC,IAAMC,EAAK,a,kCCxHlB,uEA0CeC,IApCD,SAAAC,GAAK,OACjB,YAAC,cAAD,CACEF,MAAK,aAiBLG,OAAQ,SAAAzD,GACN,IAAMmB,EAAQnB,EAAK0D,OAAOC,MAAMC,MAAK,SAAAC,GACnC,OAAOA,EAAEC,KAAKC,aAAaC,SAASR,EAAMxB,aAE5C,OAAKb,EAKE,YAAC,IAAD,CAAK8C,IAAKT,EAAMS,IAAMC,MAAO/C,EAAM2C,KAAKK,gBAAgBD,MAC/D1E,MAAO,CAAEG,OAAQ,OAAQgC,UAAW6B,EAAM7B,WACpCM,SAAUuB,EAAMvB,WANb","file":"component---src-pages-index-js-a538a09f12b5fb476804.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ headerText }) => (\n  <header\n    style={{\n      background: `white`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        // padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0}}>\n          {headerText}\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { css } from \"@emotion/core\"\nimport styles from \"../styles/global.css\"\n\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\n\nexport default function Home({ data }) {\n  const basicInfo = data.basicInfoYaml.basic_info\n  const work = data.workYaml.work\n  const projects = data.projectsYaml.projects\n\n  console.log(basicInfo, work, projects)\n  return (\n    <Layout title=\"home\">\n      <SEO title=\"Home\" />\n\n      <div style={{ marginRight: \"10%\" }}>\n        {/* <h2> {basicInfo.email} </h2> */}\n\n        <div dangerouslySetInnerHTML={{ __html: basicInfo.summary }} />\n\n        <div id=\"projects\">\n          <h2>Projects</h2>\n          <p>\n            {\" \"}\n            I'm a maker at heart. Over the years, I've worked on a variety of\n            projects in my spare time. Check out{\" \"}\n            <a href=\"https://github.com/leungjch\">my Github</a> to see more.{\" \"}\n          </p>\n          <ul style={{ margin: \"1%\" }}>\n            {projects.map((data, index) => {\n              var image\n              var demo\n              if (/[\\/.](webm)$/i.test(data.img)) {\n                // if img is gif, use <img> tag, else use Gatsby Image tag\n                image = (\n                  <video\n                    autoplay=\"true\"\n                    loop=\"true\"\n                    muted=\"true\"\n                    style={{\n                      width: \"100%\",\n                      maxHeight: \"33vh\",\n                      backgroundColor: \"white\",\n                      padding: \"2px\",\n                    }}\n                  >\n                    {\" \"}\n                    <source src={data.img} type=\"video/webm\" />{\" \"}\n                  </video>\n                )\n              } else {\n                image = (\n                  <Image\n                    filename={data.img}\n                    maxHeight={\"33vh\"}\n                    imgStyle={{\n                      objectFit: \"scale-down\",\n                      objectPosition: \"right\",\n                    }}\n                  />\n                )\n              }\n              if (data.linkdemo.length > 0) {\n                demo = <a href={data.linkdemo}>[demo]</a>\n              }\n              var repo = <a href={data.linkrepo}>[code]</a>\n              return (\n                <li\n                  key={`projects_${index}`}\n                  style={{ listStyleType: \"none\", marginLeft: \"-22%\" }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      verticalAlign: \"middle\",\n                      alignItems: \"middle\",\n                      border: \"black\",\n                      marginBottom: \"5%\",\n                    }}\n                  >\n                    <div\n                      className=\"zoom\"\n                      style={{\n                        flexGrow: 1,\n                        width: \"30%\",\n                        marginRight: \"5%\",\n                        marginLeft: \"2%\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      {image}\n                    </div>\n                    <div style={{ width: \"70%\" }}>\n                      <h3 style={{ margin: \"0% 0 2% 0\" }}>\n                        {data.name} {demo} {repo}\n                      </h3>\n                      <p>{data.description}</p>\n                      <p>\n                        Keywords: <strong>{data.keywords}</strong>\n                      </p>\n                    </div>\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    basicInfoYaml {\n      basic_info {\n        name\n        image\n        email\n        phone\n        url\n        summary\n        location {\n          city\n          countryCode\n          region\n        }\n        social {\n          github\n        }\n      }\n    }\n\n    workYaml {\n      work {\n        place\n        duration\n        summary\n        position\n      }\n    }\n\n    projectsYaml {\n      projects {\n        name\n        keywords\n        description\n        img\n        linkrepo\n        linkdemo\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styles from '../styles/global.css'\n// Note: You can change \"images\" to whatever you'd like.\n\nconst Image = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 500) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.filename);\n      });\n      if (!image) {\n        return null;\n      }\n\n      //const imageSizes = image.node.childImageSharp.sizes; sizes={imageSizes}\n      return <Img alt={props.alt}  fluid={image.node.childImageSharp.fluid} \n      style={{ margin: '0rem', maxHeight: props.maxHeight}}\n            imgStyle={props.imgStyle}\n      />;\n    }}\n  />\n);\n\nexport default Image;"],"sourceRoot":""}