{"version":3,"sources":["webpack:///./src/pages/notes.js"],"names":["Notes","data","css","allMarkdownRemark","edges","filter","node","frontmatter","type","map","key","id","to","fields","slug","rhythm","title","date","tags","query"],"mappings":"4FAAA,mJ,+KAMe,SAASA,EAAT,GACd,IAD8BC,EAC/B,EAD+BA,KAE3B,OACI,YAAC,IAAD,KACA,kBAAIC,IAAG,GAAP,SAICD,EAAKE,kBAAkBC,MAAMC,QAAO,SAAS,GAC5C,MAA8B,SADsB,EAAPC,KACpCC,YAAYC,QAEjBC,KAAI,gBAAGH,EAAH,EAAGA,KAAH,OACR,mBAAKI,IAAKJ,EAAKK,IACb,YAAC,OAAD,CACEC,GAAIN,EAAKO,OAAOC,KAChBZ,IAAG,GAKL,kBACEA,IAAKA,YAAF,iBACgBa,YAAO,EAAI,GAD3B,MAIFT,EAAKC,YAAYS,MAAO,IACzB,oBACEd,IAAG,GADL,KAKKI,EAAKC,YAAYU,OAIxB,8BAAS,0BAASX,EAAKC,YAAYW,aASxC,IAAMC,EAAK","file":"component---src-pages-notes-js-c5377ce5142dd1d8ce1f.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default function Notes({data})\n{\n    return (\n        <Layout>\n        <h1 css={css`display: inline-block;border-bottom: 1px solid;`}>\n        Notes\n        </h1>\n        {/* <h4>{data.allMarkdownRemark.totalCount} Posts</h4> */}\n        {data.allMarkdownRemark.edges.filter(function({node}) {\n          if (node.frontmatter.type === 'note') { return true }\n          else  { return false \n          }}).map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n            <h2\n              css={css`\n                margin-bottom: ${rhythm(1 / 4)};\n              `}\n            >\n              {node.frontmatter.title}{\" \"}\n              <span\n                css={css`\n                  color: #bbb;\n                `}\n              >\n                â€” {node.frontmatter.date}\n              </span>\n            </h2>\n            {/* <p>{node.excerpt}</p> */}\n            <p>Tags: <strong>{node.frontmatter.tags}</strong></p>\n            </Link>\n          </div>\n        ))}\n\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            totalCount\n            edges {\n              node {\n                id\n                frontmatter {\n                  title\n                  date(formatString: \"DD MMMM, YYYY\")\n                  type\n                  tags\n                }\n                fields {\n                  slug\n                }\n                excerpt\n              }\n            }\n          }\n    }\n  `\n  "],"sourceRoot":""}