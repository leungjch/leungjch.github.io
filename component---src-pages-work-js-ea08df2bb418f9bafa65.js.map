{"version":3,"sources":["webpack:///./node_modules/extend/index.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./node_modules/style-to-object/index.js","webpack:///./node_modules/inline-style-parser/index.js","webpack:///./node_modules/unist-util-stringify-position/lib/index.js","webpack:///./node_modules/vfile-message/lib/index.js","webpack:///./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack:///./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack:///./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack:///./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack:///./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack:///./node_modules/react-markdown/node_modules/bail/index.js","webpack:///./node_modules/react-markdown/node_modules/is-plain-obj/index.js","webpack:///./node_modules/react-markdown/node_modules/trough/index.js","webpack:///./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack:///./node_modules/mdast-util-to-string/lib/index.js","webpack:///./node_modules/micromark-util-chunked/index.js","webpack:///./node_modules/micromark-util-combine-extensions/index.js","webpack:///./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack:///./node_modules/micromark-util-character/index.js","webpack:///./node_modules/micromark-factory-space/index.js","webpack:///./node_modules/micromark/lib/initialize/content.js","webpack:///./node_modules/micromark/lib/initialize/document.js","webpack:///./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack:///./node_modules/micromark-util-subtokenize/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/content.js","webpack:///./node_modules/micromark/lib/initialize/flow.js","webpack:///./node_modules/micromark/lib/initialize/text.js","webpack:///./node_modules/micromark-util-resolve-all/index.js","webpack:///./node_modules/micromark/lib/create-tokenizer.js","webpack:///./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack:///./node_modules/micromark-core-commonmark/lib/list.js","webpack:///./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack:///./node_modules/micromark-factory-destination/index.js","webpack:///./node_modules/micromark-factory-label/index.js","webpack:///./node_modules/micromark-factory-title/index.js","webpack:///./node_modules/micromark-factory-whitespace/index.js","webpack:///./node_modules/micromark-util-normalize-identifier/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/definition.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack:///./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack:///./node_modules/micromark-util-html-tag-name/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack:///./node_modules/character-entities/index.js","webpack:///./node_modules/decode-named-character-reference/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack:///./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack:///./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-end.js","webpack:///./node_modules/micromark-util-classify-character/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/attention.js","webpack:///./node_modules/micromark/lib/constructs.js","webpack:///./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack:///./node_modules/micromark-core-commonmark/lib/autolink.js","webpack:///./node_modules/micromark-core-commonmark/lib/html-text.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack:///./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-text.js","webpack:///./node_modules/micromark/lib/parse.js","webpack:///./node_modules/micromark/lib/preprocess.js","webpack:///./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack:///./node_modules/micromark-util-decode-string/index.js","webpack:///./node_modules/mdast-util-from-markdown/lib/index.js","webpack:///./node_modules/micromark/lib/postprocess.js","webpack:///./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack:///./node_modules/remark-rehype/node_modules/unist-builder/lib/index.js","webpack:///./node_modules/unist-util-is/lib/index.js","webpack:///./node_modules/unist-util-visit-parents/lib/index.js","webpack:///./node_modules/remark-rehype/node_modules/unist-util-visit/lib/index.js","webpack:///./node_modules/remark-rehype/node_modules/unist-util-position/lib/index.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-definitions/lib/index.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/traverse.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/wrap.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack:///./node_modules/remark-rehype/node_modules/unist-util-generated/lib/index.js","webpack:///./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack:///./node_modules/remark-rehype/index.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/util/schema.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/util/merge.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/normalize.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/util/info.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/util/types.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/util/defined-info.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/util/create.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/xlink.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/xml.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/xmlns.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/aria.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/html.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/svg.js","webpack:///./node_modules/react-markdown/node_modules/property-information/index.js","webpack:///./node_modules/react-markdown/lib/rehype-filter.js","webpack:///./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack:///./node_modules/react-markdown/lib/uri-transformer.js","webpack:///./node_modules/react-markdown/node_modules/hast-util-whitespace/index.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/find.js","webpack:///./node_modules/react-markdown/node_modules/property-information/lib/hast-to-react.js","webpack:///./node_modules/react-markdown/lib/ast-to-react.js","webpack:///./node_modules/react-markdown/node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/react-markdown/node_modules/space-separated-tokens/index.js","webpack:///./node_modules/react-markdown/lib/react-markdown.js","webpack:///./src/pages/work.js","webpack:///./node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/react-markdown/node_modules/react-is/index.js","webpack:///./src/components/image.js","webpack:///./node_modules/mdurl/encode.js"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","isBuffer","parse","style","iterator","declaration","output","property","declarations","hasIterator","len","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","prop","val","ret","decl","decls","stringifyPosition","point","place","origin","parts","super","undefined","index","indexOf","message","stack","fatal","ruleId","file","actual","expected","url","note","basename","path","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","_len","segments","_key","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","part","bail","getPrototypeOf","Symbol","toStringTag","wrap","middleware","callback","called","_len3","parameters","_key3","fnExpectsCallback","done","apply","exception","Promise","then","_len4","_key4","unified","base","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","fn","_len2","_key2","use","middelware","trough","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","all","extension","hook","left","right","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","contentStart","attempt","parser","constructs","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","disable","null","blankLine","after","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","shift","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","open","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","toLowerCase","toUpperCase","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","setextUnderline","paragraph","definition","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","sequenceOpen","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","characterEntities","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","decodeNamedCharacterReference","characterReference","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","label","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","sequenceFurther","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","tailExitIndex","headEnterIndex","extensions","combineExtensions","string","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","hex","fromMarkdown","config","transforms","canContainEols","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","blockQuote","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeText","codeTextData","codeFlowValue","title","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlText","htmlTextData","listItem","spread","_spread","checked","listItemValue","getData","setData","listOrdered","listUnordered","reference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","thematicBreak","closer","atxHeadingSequence","depth","onexitdata","characterEscapeValue","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","resume","codeFencedFence","onexithardbreak","referenceType","fragment","labelText","ancestor","decodeString","resource","setextHeadingLineSequence","setextHeadingText","configure","combined","mdastExtensions","tokenStack","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","errorHandler","onExitError","ordered","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","d","remarkParse","u","props","convert","castFactory","tests","checks","anyFactory","propsFactory","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","concat","parent","pointStart","pointEnd","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","loose","properties","className","footnoteReference","footnoteOrder","id","role","revert","subtype","suffix","contents","listItemLoose","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","root","table","rows","align","row","out","cell","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","cache","hName","hProperties","hChildren","ctx","toHast","foot","listItems","backReference","footer","bridge","mutate","Schema","normal","space","merge","definitions","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","Fragment","isValidElementType","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","Type","rest","dashes","find","padRight","padLeft","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","rehypePlugins","hastNode","Work","_ref","basicInfo","basicInfoYaml","basic_info","work","workYaml","projects","projectsYaml","log","___EmotionJSX","Layout","SEO","marginRight","margin","listStyleType","flexDirection","verticalAlign","alignItems","marginBottom","marginTop","flexGrow","Image","img","maxHeight","imgStyle","objectFit","objectPosition","borderWidth","borderRadius","float","duration","location","defaultProps","uri","first","propTypes","func","arrayOf","bool","oneOfType","b","e","f","g","l","n","p","q","w","for","a","t","$$typeof","A","B","C","D","E","F","G","H","I","ContextConsumer","ContextProvider","ForwardRef","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","StaticQuery","query","render","images","edges","relativePath","Img","fluid","childImageSharp","encodeCache","encode","exclude","keepEscaped","nextCode","defaultChars","ch","getEncodeCache","encodeURIComponent","componentChars"],"mappings":"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","file":"component---src-pages-work-js-ea08df2bb418f9bafa65.js","sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar isArray = function isArray(arr) {\n  if (typeof Array.isArray === 'function') {\n    return Array.isArray(arr);\n  }\n  return toStr.call(arr) === '[object Array]';\n};\nvar isPlainObject = function isPlainObject(obj) {\n  if (!obj || toStr.call(obj) !== '[object Object]') {\n    return false;\n  }\n  var hasOwnConstructor = hasOwn.call(obj, 'constructor');\n  var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n  // Not own constructor property must be Object\n  if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n    return false;\n  }\n\n  // Own properties are enumerated firstly, so to speed up,\n  // if last one is own, then all properties are own.\n  var key;\n  for (key in obj) {/**/}\n  return typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n  if (defineProperty && options.name === '__proto__') {\n    defineProperty(target, options.name, {\n      enumerable: true,\n      configurable: true,\n      value: options.newValue,\n      writable: true\n    });\n  } else {\n    target[options.name] = options.newValue;\n  }\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n  if (name === '__proto__') {\n    if (!hasOwn.call(obj, name)) {\n      return void 0;\n    } else if (gOPD) {\n      // In early versions of node, obj['__proto__'] is buggy when obj has\n      // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n      return gOPD(obj, name).value;\n    }\n  }\n  return obj[name];\n};\nmodule.exports = function extend() {\n  var options, name, src, copy, copyIsArray, clone;\n  var target = arguments[0];\n  var i = 1;\n  var length = arguments.length;\n  var deep = false;\n\n  // Handle a deep copy situation\n  if (typeof target === 'boolean') {\n    deep = target;\n    target = arguments[1] || {};\n    // skip the boolean and the target\n    i = 2;\n  }\n  if (target == null || typeof target !== 'object' && typeof target !== 'function') {\n    target = {};\n  }\n  for (; i < length; ++i) {\n    options = arguments[i];\n    // Only deal with non-null/undefined values\n    if (options != null) {\n      // Extend the base object\n      for (name in options) {\n        src = getProperty(target, name);\n        copy = getProperty(options, name);\n\n        // Prevent never-ending loop\n        if (target !== copy) {\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && isArray(src) ? src : [];\n            } else {\n              clone = src && isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            setProperty(target, {\n              name: name,\n              newValue: extend(deep, clone, copy)\n            });\n\n            // Don't bring in undefined values\n          } else if (typeof copy !== 'undefined') {\n            setProperty(target, {\n              name: name,\n              newValue: copy\n            });\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n};","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer(obj) {\n  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n};","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n  return output;\n}\nmodule.exports = StyleToObject;","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  if (!style) return [];\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = {\n      line: lineno,\n      column: column\n    };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = {\n      line: lineno,\n      column: column\n    };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n    var i = 2;\n    while (EMPTY_STRING != style.charAt(i) && (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))) {\n      ++i;\n    }\n    i += 2;\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n    return decls;\n  }\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return '';\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position);\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value);\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value);\n  }\n\n  // ?\n  return '';\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column);\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end);\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport { stringifyPosition } from 'unist-util-stringify-position';\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null];\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {\n        line: null,\n        column: null\n      },\n      // @ts-expect-error: \"\n      end: {\n        line: null,\n        column: null\n      }\n    };\n    super();\n    if (typeof place === 'string') {\n      origin = place;\n      place = undefined;\n    }\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':');\n      if (index === -1) {\n        parts[1] = origin;\n      } else {\n        parts[0] = origin.slice(0, index);\n        parts[1] = origin.slice(index + 1);\n      }\n    }\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position;\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place;\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place;\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1';\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason;\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = '';\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack;\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message;\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal;\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line;\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column;\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position;\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0];\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1];\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file;\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual;\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected;\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url;\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note;\n    /* eslint-enable no-unused-expressions */\n  }\n}\nVFileMessage.prototype.file = '';\nVFileMessage.prototype.name = '';\nVFileMessage.prototype.reason = '';\nVFileMessage.prototype.message = '';\nVFileMessage.prototype.stack = '';\nVFileMessage.prototype.fatal = null;\nVFileMessage.prototype.column = null;\nVFileMessage.prototype.line = null;\nVFileMessage.prototype.source = null;\nVFileMessage.prototype.ruleId = null;\nVFileMessage.prototype.position = null;","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {\n  basename,\n  dirname,\n  extname,\n  join,\n  sep: '/'\n};\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string');\n  }\n  assertPath(path);\n  let start = 0;\n  let end = -1;\n  let index = path.length;\n  /** @type {boolean | undefined} */\n  let seenNonSlash;\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1;\n          break;\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true;\n        end = index + 1;\n      }\n    }\n    return end < 0 ? '' : path.slice(start, end);\n  }\n  if (ext === path) {\n    return '';\n  }\n  let firstNonSlashEnd = -1;\n  let extIndex = ext.length - 1;\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1;\n        break;\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true;\n        firstNonSlashEnd = index + 1;\n      }\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index;\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1;\n          end = firstNonSlashEnd;\n        }\n      }\n    }\n  }\n  if (start === end) {\n    end = firstNonSlashEnd;\n  } else if (end < 0) {\n    end = path.length;\n  }\n  return path.slice(start, end);\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path);\n  if (path.length === 0) {\n    return '.';\n  }\n  let end = -1;\n  let index = path.length;\n  /** @type {boolean | undefined} */\n  let unmatchedSlash;\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index;\n        break;\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true;\n    }\n  }\n  return end < 0 ? path.charCodeAt(0) === 47 /* `/` */ ? '/' : '.' : end === 1 && path.charCodeAt(0) === 47 /* `/` */ ? '//' : path.slice(0, end);\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path);\n  let index = path.length;\n  let end = -1;\n  let startPart = 0;\n  let startDot = -1;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0;\n  /** @type {boolean | undefined} */\n  let unmatchedSlash;\n  while (index--) {\n    const code = path.charCodeAt(index);\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1;\n        break;\n      }\n      continue;\n    }\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true;\n      end = index + 1;\n    }\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index;\n      } else if (preDotState !== 1) {\n        preDotState = 1;\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1;\n    }\n  }\n  if (startDot < 0 || end < 0 ||\n  // We saw a non-dot character immediately before the dot.\n  preDotState === 0 ||\n  // The (right-most) trimmed path component is exactly `..`.\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join() {\n  let index = -1;\n  /** @type {string | undefined} */\n  let joined;\n  for (var _len = arguments.length, segments = new Array(_len), _key = 0; _key < _len; _key++) {\n    segments[_key] = arguments[_key];\n  }\n  while (++index < segments.length) {\n    assertPath(segments[index]);\n    if (segments[index]) {\n      joined = joined === undefined ? segments[index] : joined + '/' + segments[index];\n    }\n  }\n  return joined === undefined ? '.' : normalize(joined);\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path);\n  const absolute = path.charCodeAt(0) === 47; /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute);\n  if (value.length === 0 && !absolute) {\n    value = '.';\n  }\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/';\n  }\n  return absolute ? '/' + value : value;\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let index = -1;\n  /** @type {number | undefined} */\n  let code;\n  /** @type {number} */\n  let lastSlashIndex;\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index);\n    } else if (code === 47 /* `/` */) {\n      break;\n    } else {\n      code = 47; /* `/` */\n    }\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (result.length < 2 || lastSegmentLength !== 2 || result.charCodeAt(result.length - 1) !== 46 /* `.` */ || result.charCodeAt(result.length - 2) !== 46 /* `.` */) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/');\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = '';\n                lastSegmentLength = 0;\n              } else {\n                result = result.slice(0, lastSlashIndex);\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/');\n              }\n              lastSlash = index;\n              dots = 0;\n              continue;\n            }\n          } else if (result.length > 0) {\n            result = '';\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index);\n        } else {\n          result = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++;\n    } else {\n      dots = -1;\n    }\n  }\n  return result;\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n/* eslint-enable max-depth, complexity */","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {\n  cwd\n};\nfunction cwd() {\n  return '/';\n}","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return fileUrlOrPath !== null && typeof fileUrlOrPath === 'object' &&\n  // @ts-expect-error: indexable.\n  fileUrlOrPath.href &&\n  // @ts-expect-error: indexable.\n  fileUrlOrPath.origin;\n}","/// <reference lib=\"dom\" />\n\nimport { isUrl } from './minurl.shared.js';\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path);\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The \"path\" argument must be of type string or an instance of URL. Received `' + path + '`');\n    error.code = 'ERR_INVALID_ARG_TYPE';\n    throw error;\n  }\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file');\n    error.code = 'ERR_INVALID_URL_SCHEME';\n    throw error;\n  }\n  return getPathFromURLPosix(path);\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('File URL host must be \"localhost\" or empty on darwin');\n    error.code = 'ERR_INVALID_FILE_URL_HOST';\n    throw error;\n  }\n  const pathname = url.pathname;\n  let index = -1;\n  while (++index < pathname.length) {\n    if (pathname.charCodeAt(index) === 37 /* `%` */ && pathname.charCodeAt(index + 1) === 50 /* `2` */) {\n      const third = pathname.charCodeAt(index + 2);\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError('File URL path must not include encoded / characters');\n        error.code = 'ERR_INVALID_FILE_URL_PATH';\n        throw error;\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\nexport { isUrl } from './minurl.shared.js';","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer';\nimport { VFileMessage } from 'vfile-message';\nimport { path } from './minpath.js';\nimport { proc } from './minproc.js';\nimport { urlToPath, isUrl } from './minurl.js';\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname'];\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options;\n    if (!value) {\n      options = {};\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {\n        value\n      };\n    } else if (isUrl(value)) {\n      options = {\n        path: value\n      };\n    } else {\n      options = value;\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {};\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = [];\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = [];\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd();\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value;\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored;\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result;\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map;\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1;\n    while (++index < order.length) {\n      const prop = order[index];\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined && options[prop] !== null) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop];\n      }\n    }\n\n    /** @type {string} */\n    let prop;\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop];\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1];\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path);\n    }\n    assertNonEmpty(path, 'path');\n    if (this.path !== path) {\n      this.history.push(path);\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined;\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname');\n    this.path = path.join(dirname || '', this.basename);\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined;\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename');\n    assertPart(basename, 'basename');\n    this.path = path.join(this.dirname || '', basename);\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined;\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname');\n    assertPath(this.dirname, 'extname');\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`');\n      }\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots');\n      }\n    }\n    this.path = path.join(this.dirname, this.stem + (extname || ''));\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string' ? path.basename(this.path, this.extname) : undefined;\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem');\n    assertPart(stem, 'stem');\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''));\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined);\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin);\n    if (this.path) {\n      message.name = this.path + ':' + message.name;\n      message.file = this.path;\n    }\n    message.fatal = false;\n    this.messages.push(message);\n    return message;\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin);\n    message.fatal = null;\n    return message;\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin);\n    message.fatal = true;\n    throw message;\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error('`' + name + '` cannot be a path: did not expect `' + path.sep + '`');\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty');\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too');\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value);\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error;\n  }\n}","export default function isPlainObject(value) {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = [];\n  /** @type {Pipeline} */\n  const pipeline = {\n    run,\n    use\n  };\n  return pipeline;\n\n  /** @type {Run} */\n  function run() {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n    let middlewareIndex = -1;\n    /** @type {Callback} */\n    const callback = values.pop();\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback);\n    }\n    next(null, ...values);\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error) {\n      const fn = fns[++middlewareIndex];\n      let index = -1;\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      // Copy non-nullish input into values.\n      for (var _len2 = arguments.length, output = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        output[_key2 - 1] = arguments[_key2];\n      }\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index];\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output;\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output);\n      } else {\n        callback(null, ...output);\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError('Expected `middelware` to be a function, not ' + middelware);\n    }\n    fns.push(middelware);\n    return pipeline;\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called;\n  return wrapped;\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped() {\n    for (var _len3 = arguments.length, parameters = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      parameters[_key3] = arguments[_key3];\n    }\n    const fnExpectsCallback = middleware.length > parameters.length;\n    /** @type {any} */\n    let result;\n    if (fnExpectsCallback) {\n      parameters.push(done);\n    }\n    try {\n      result = middleware.apply(this, parameters);\n    } catch (error) {\n      const exception = /** @type {Error} */error;\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception;\n      }\n      return done(exception);\n    }\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done);\n      } else if (result instanceof Error) {\n        done(result);\n      } else {\n        then(result);\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error) {\n    if (!called) {\n      called = true;\n      for (var _len4 = arguments.length, output = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        output[_key4 - 1] = arguments[_key4];\n      }\n      callback(error, ...output);\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value);\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport { bail } from 'bail';\nimport isBuffer from 'is-buffer';\nimport extend from 'extend';\nimport isPlainObj from 'is-plain-obj';\nimport { trough } from 'trough';\nimport { VFile } from 'vfile';\n\n// Expose a frozen processor.\nexport const unified = base().freeze();\nconst own = {}.hasOwnProperty;\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough();\n  /** @type {Processor['attachers']} */\n  const attachers = [];\n  /** @type {Record<string, unknown>} */\n  let namespace = {};\n  /** @type {boolean|undefined} */\n  let frozen;\n  let freezeIndex = -1;\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data;\n  processor.Parser = undefined;\n  processor.Compiler = undefined;\n\n  // Lock.\n  processor.freeze = freeze;\n\n  // Plugins.\n  processor.attachers = attachers;\n  // @ts-expect-error: overloads are handled.\n  processor.use = use;\n\n  // API.\n  processor.parse = parse;\n  processor.stringify = stringify;\n  // @ts-expect-error: overloads are handled.\n  processor.run = run;\n  processor.runSync = runSync;\n  // @ts-expect-error: overloads are handled.\n  processor.process = process;\n  processor.processSync = processSync;\n\n  // Expose.\n  return processor;\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base();\n    let index = -1;\n    while (++index < attachers.length) {\n      destination.use(...attachers[index]);\n    }\n    destination.data(extend(true, {}, namespace));\n    return destination;\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen);\n        namespace[key] = value;\n        return processor;\n      }\n\n      // Get `key`.\n      return own.call(namespace, key) && namespace[key] || null;\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen);\n      namespace = key;\n      return processor;\n    }\n\n    // Get space.\n    return namespace;\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor;\n    }\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex];\n      if (options[0] === false) {\n        continue;\n      }\n      if (options[0] === true) {\n        options[0] = undefined;\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options);\n      if (typeof transformer === 'function') {\n        transformers.use(transformer);\n      }\n    }\n    frozen = true;\n    freezeIndex = Number.POSITIVE_INFINITY;\n    return processor;\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value) {\n    for (var _len = arguments.length, options = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      options[_key - 1] = arguments[_key];\n    }\n    /** @type {Record<string, unknown>|undefined} */\n    let settings;\n    assertUnfrozen('use', frozen);\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options);\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value);\n      } else {\n        addPreset(value);\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`');\n    }\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings);\n    }\n    return processor;\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value);\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value;\n          addPlugin(plugin, ...options);\n        } else {\n          addPreset(value);\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`');\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins);\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings);\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1;\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index];\n          add(thing);\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`');\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1;\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry;\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index];\n          break;\n        }\n      }\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value);\n        }\n        entry[1] = value;\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments]);\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze();\n    const file = vfile(doc);\n    const Parser = processor.Parser;\n    assertParser('parse', Parser);\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse();\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file); // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze();\n    const file = vfile(doc);\n    const Compiler = processor.Compiler;\n    assertCompiler('stringify', Compiler);\n    assertNode(node);\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile();\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file); // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node);\n    processor.freeze();\n    if (!callback && typeof doc === 'function') {\n      callback = doc;\n      doc = undefined;\n    }\n    if (!callback) {\n      return new Promise(executor);\n    }\n    executor(null, callback);\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done);\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node;\n        if (error) {\n          reject(error);\n        } else if (resolve) {\n          resolve(tree);\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file);\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result;\n    /** @type {boolean|undefined} */\n    let complete;\n    processor.run(node, file, done);\n    assertDone('runSync', 'run', complete);\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result;\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error);\n      result = tree;\n      complete = true;\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze();\n    assertParser('process', processor.Parser);\n    assertCompiler('process', processor.Compiler);\n    if (!callback) {\n      return new Promise(executor);\n    }\n    executor(null, callback);\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc);\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error);\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file);\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result;\n          } else {\n            file.result = result;\n          }\n          done(error, file);\n        }\n      });\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error);\n        } else if (resolve) {\n          resolve(file);\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file);\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete;\n    processor.freeze();\n    assertParser('processSync', processor.Parser);\n    assertCompiler('processSync', processor.Compiler);\n    const file = vfile(doc);\n    processor.process(file, done);\n    assertDone('processSync', 'process', complete);\n    return file;\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true;\n      bail(error);\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return typeof value === 'function' &&\n  // Prototypes do exist.\n  // type-coverage:ignore-next-line\n  value.prototype && (\n  // A function with keys in its prototype is probably a constructor.\n  // Classes’ prototype methods are not enumerable, so we check if some value\n  // exists in the prototype.\n  // type-coverage:ignore-next-line\n  keys(value.prototype) || name in value.prototype);\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key;\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`');\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`');\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error('Cannot call `' + name + '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.');\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`');\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error('`' + name + '` finished async. Use `' + asyncName + '` instead');\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value);\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(value && typeof value === 'object' && 'message' in value && 'messages' in value);\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value);\n}","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {};\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions;\n  const includeImageAlt = typeof settings.includeImageAlt === 'boolean' ? settings.includeImageAlt : true;\n  const includeHtml = typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true;\n  return one(value, includeImageAlt, includeHtml);\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value;\n    }\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt;\n    }\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml);\n    }\n  }\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml);\n  }\n  return '';\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml);\n  }\n  return result.join('');\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object');\n}","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport { splice } from 'micromark-util-chunked';\nconst hasOwnProperty = {}.hasOwnProperty;\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {};\n  let index = -1;\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index]);\n  }\n  return all;\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook;\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined;\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {});\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook];\n    /** @type {string} */\n    let code;\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = [];\n        const value = right[code];\n        constructs(\n        // @ts-expect-error Looks like a list.\n        left[code], Array.isArray(value) ? value : value ? [value] : []);\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1;\n  /** @type {Array<unknown>} */\n  const before = [];\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;\n    (list[index].add === 'after' ? existing : before).push(list[index]);\n  }\n  splice(existing, 0, 0, before);\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {};\n  let index = -1;\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index]);\n  }\n  return handlers;\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook;\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined;\n    const left = maybe || (all[hook] = {});\n    const right = extension[hook];\n    /** @type {keyof Handles} */\n    let type;\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type];\n      }\n    }\n  }\n}","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/;","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport { unicodePunctuationRegex } from './lib/unicode-punctuation-regex.js';\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, contentStart, 'linePrefix');\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph');\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText');\n      effects.exit('paragraph');\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit('chunkText');\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === 'chunkFlow') {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point);\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit('chunkFlow'));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token);\n    if (eof) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === 'chunkFlow') {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point);\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), 'linePrefix', this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, 'linePrefix')(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport { splice } from 'micromark-util-chunked';\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events[index];\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === 'chunkFlow' && events[index - 1][1].type === 'listItemPrefix') {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === 'lineEndingBlank') {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === 'content') {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break;\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events[otherIndex];\n        if (otherEvent[1].type === 'lineEnding' || otherEvent[1].type === 'lineEndingBlank') {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank';\n            }\n            otherEvent[1].type = 'lineEnding';\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start);\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        splice(events, lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1];\n  const context = events[eventIndex][2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.unshift([start, start + slice.length - 1]);\n    splice(events, start, 2, slice);\n  }\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content');\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent');\n    effects.exit('content');\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit('chunkContent');\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent');\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, prefixed, 'linePrefix');\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === 'linePrefix' && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), 'linePrefix')));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEndingBlank');\n    effects.consume(code);\n    effects.exit('lineEndingBlank');\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined)\n  };\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter('data');\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data');\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === 'lineEnding') && events[eventIndex - 1][1].type === 'data') {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? 'lineSuffix' : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        };\n        data.end = Object.assign({}, token.start);\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = [];\n  let index = -1;\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll;\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context);\n      called.push(resolve);\n    }\n  }\n  return events;\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(from ? Object.assign({}, from) : {\n    line: 1,\n    column: 1,\n    offset: 0\n  }, {\n    _index: 0,\n    _bufferIndex: -1\n  });\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    } = point;\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) /* c8 ignore next 1 */ ? handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // @ts-expect-error Looks like a construct.\n      handleListOfConstructs([constructs]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(def) ? def : def ? [def] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      restore,\n      from: startEventsIndex\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = '\\r';\n          break;\n        }\n      case -4:\n        {\n          value = '\\n';\n          break;\n        }\n      case -3:\n        {\n          value = '\\r' + '\\n';\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? ' ' : '\\t';\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = ' ';\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak');\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence');\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak');\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit('thematicBreakSequence');\n    return markdownSpace(code) ? factorySpace(effects, atBreak, 'whitespace')(code) : atBreak(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === 'linePrefix' ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? 'listUnordered' : 'listOrdered');\n    if (kind === 'listUnordered' ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix');\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix');\n        effects.enter('listItemValue');\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit('listItemValue');\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker');\n    effects.consume(code);\n    effects.exit('listItemMarker');\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace');\n      effects.consume(code);\n      effects.exit('listItemPrefixWhitespace');\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit('listItemPrefix'), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, 'listItemIndent', self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'listItemIndent', self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'listItemIndent' && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, 'listItemPrefixWhitespace', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === 'listItemPrefixWhitespace' ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter('blockQuotePrefix');\n      effects.enter('blockQuoteMarker');\n      effects.consume(code);\n      effects.exit('blockQuoteMarker');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace');\n      effects.consume(code);\n      effects.exit('blockQuotePrefixWhitespace');\n      effects.exit('blockQuotePrefix');\n      return ok;\n    }\n    effects.exit('blockQuotePrefix');\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote');\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return atBreak;\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit('chunkString');\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return factorySpace(effects, atBreak, 'linePrefix');\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString');\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? 'linePrefix' : 'lineSuffix')(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, ' ')\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition');\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, 'definitionLabel', 'definitionLabelMarker', 'definitionLabelString')(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, 'definitionDestination', 'definitionDestinationLiteral', 'definitionDestinationLiteralMarker', 'definitionDestinationRaw', 'definitionDestinationString')(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, 'whitespace')(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition');\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, 'definitionTitle', 'definitionTitleMarker', 'definitionTitleString')(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented');\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'linePrefix' && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter('codeFlowValue');\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue');\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented');\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'linePrefix' && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText';\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = Object.assign({}, events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== 'lineEnding' && self.events[index][1].type !== 'linePrefix' && self.events[index][1].type !== 'content') {\n        paragraph = self.events[index][1].type === 'paragraph';\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine');\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence');\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit('setextHeadingLineSequence');\n    return markdownSpace(code) ? factorySpace(effects, after, 'lineSuffix')(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'search', 'section', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea'];","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n};\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow');\n    effects.enter('htmlFlowData');\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA[';\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData');\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData');\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter('htmlFlowData');\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData');\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow');\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === 'linePrefix' ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter('codeFenced');\n    effects.enter('codeFencedFence');\n    effects.enter('codeFencedFenceSequence');\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit('codeFencedFenceSequence');\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, 'whitespace')(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence');\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter('codeFencedFenceInfo');\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString');\n      effects.exit('codeFencedFenceInfo');\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString');\n      effects.exit('codeFencedFenceInfo');\n      return factorySpace(effects, metaBefore, 'whitespace')(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter('codeFencedFenceMeta');\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString');\n      effects.exit('codeFencedFenceMeta');\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, 'linePrefix', initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter('codeFlowValue');\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue');\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced');\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence');\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence');\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence');\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence');\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n};","import { characterEntities } from 'character-entities';\nconst own = {}.hasOwnProperty;\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false;\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference');\n    effects.enter('characterReferenceMarker');\n    effects.consume(code);\n    effects.exit('characterReferenceMarker');\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric');\n      effects.consume(code);\n      effects.exit('characterReferenceMarkerNumeric');\n      return numeric;\n    }\n    effects.enter('characterReferenceValue');\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal');\n      effects.consume(code);\n      effects.exit('characterReferenceMarkerHexadecimal');\n      effects.enter('characterReferenceValue');\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter('characterReferenceValue');\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue');\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker');\n      effects.consume(code);\n      effects.exit('characterReferenceMarker');\n      effects.exit('characterReference');\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape');\n    effects.enter('escapeMarker');\n    effects.consume(code);\n    effects.exit('escapeMarker');\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue');\n      effects.consume(code);\n      effects.exit('characterEscapeValue');\n      effects.exit('characterEscape');\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, ok, 'linePrefix');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  while (++index < events.length) {\n    const token = events[index][1];\n    if (token.type === 'labelImage' || token.type === 'labelLink' || token.type === 'labelEnd') {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2);\n      token.type = 'data';\n      index++;\n    }\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === 'link' || token.type === 'labelLink' && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === 'labelImage' || token.type === 'labelLink') && !token._balanced) {\n        open = index;\n        if (token.type !== 'labelLink') {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === 'labelImage' || self.events[index][1].type === 'labelLink') && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter('labelEnd');\n    effects.enter('labelMarker');\n    effects.consume(code);\n    effects.exit('labelMarker');\n    effects.exit('labelEnd');\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource');\n    effects.enter('resourceMarker');\n    effects.consume(code);\n    effects.exit('resourceMarker');\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, 'resourceDestination', 'resourceDestinationLiteral', 'resourceDestinationLiteralMarker', 'resourceDestinationRaw', 'resourceDestinationString', 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, 'resourceTitle', 'resourceTitleMarker', 'resourceTitleString')(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker');\n      effects.consume(code);\n      effects.exit('resourceMarker');\n      effects.exit('resource');\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, 'reference', 'referenceMarker', 'referenceString')(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference');\n    effects.enter('referenceMarker');\n    effects.consume(code);\n    effects.exit('referenceMarker');\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker');\n      effects.consume(code);\n      effects.exit('referenceMarker');\n      effects.exit('reference');\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = Object.assign({}, events[open][1].end);\n          const end = Object.assign({}, events[index][1].start);\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          };\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          };\n          events[open][1].end = Object.assign({}, openingSequence.start);\n          events[index][1].start = Object.assign({}, closingSequence.end);\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === 'whitespace') {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === 'atxHeadingSequence' && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === 'whitespace')) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading');\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence');\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence');\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence');\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading');\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText');\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit('atxHeadingSequence');\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText');\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage');\n    effects.enter('labelImageMarker');\n    effects.consume(code);\n    effects.exit('labelImageMarker');\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker');\n      effects.consume(code);\n      effects.exit('labelMarker');\n      effects.exit('labelImage');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink');\n    effects.enter('autolinkMarker');\n    effects.consume(code);\n    effects.exit('autolinkMarker');\n    effects.enter('autolinkProtocol');\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol');\n      effects.enter('autolinkMarker');\n      effects.consume(code);\n      effects.exit('autolinkMarker');\n      effects.exit('autolink');\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail';\n      effects.enter('autolinkMarker');\n      effects.consume(code);\n      effects.exit('autolinkMarker');\n      effects.exit('autolink');\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText');\n    effects.enter('htmlTextData');\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA[';\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit('htmlTextData');\n      effects.exit('htmlText');\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData');\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData');\n    return returnState(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink');\n    effects.enter('labelMarker');\n    effects.consume(code);\n    effects.exit('labelMarker');\n    effects.exit('labelLink');\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape');\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === 'lineEnding' || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === 'lineEnding' || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding';\n        events[tailExitIndex][1].type = 'codeTextPadding';\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === 'lineEnding') {\n      events[enter][1].type = 'codeTextData';\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === 'characterEscape';\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText');\n    effects.enter('codeTextSequence');\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit('codeTextSequence');\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence');\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return between;\n    }\n\n    // Data.\n    effects.enter('codeTextData');\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit('codeTextData');\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence');\n      effects.exit('codeText');\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData';\n    return data(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { text, string } from './initialize/text.js';\nimport { createTokenizer } from './create-tokenizer.js';\nimport * as defaultConstructs from './constructs.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding);\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55295 && code < 57344 ||\n  // Noncharacters.\n  code > 64975 && code < 65008 /* eslint-disable no-bitwise */ || (code & 65535) === 65535 || (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n  // Out of range\n  code > 1114111) {\n    return '\\uFFFD';\n  }\n  return String.fromCharCode(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse } from 'micromark/lib/parse.js';\nimport { preprocess } from 'micromark/lib/preprocess.js';\nimport { postprocess } from 'micromark/lib/postprocess.js';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n/**\n * @type {(\n *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n *   ((value: Value, options?: Options | null | undefined) => Root)\n * )}\n */\n\n/**\n * @param {Value} value\n * @param {Encoding | Options | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n */\nfunction (value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n};\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === 'listOrdered' || events[index][1].type === 'listUnordered') {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      if (event[1].type === 'listUnordered' || event[1].type === 'listOrdered' || event[1].type === 'blockQuote') {\n        if (event[0] === 'enter') {\n          containerBalance++;\n        } else {\n          containerBalance--;\n        }\n        atMarker = undefined;\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n            firstBlankLineIndex = index;\n          }\n          atMarker = undefined;\n        }\n      } else if (event[1].type === 'linePrefix' || event[1].type === 'listItemValue' || event[1].type === 'listItemMarker' || event[1].type === 'listItemPrefix' || event[1].type === 'listItemPrefixWhitespace') {\n        // Empty.\n      } else {\n        atMarker = undefined;\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === 'listItemPrefix' || containerBalance === -1 && event[0] === 'exit' && (event[1].type === 'listUnordered' || event[1].type === 'listOrdered')) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === 'lineEnding' || tailEvent[1].type === 'lineEndingBlank') {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank';\n                listSpread = true;\n              }\n              tailEvent[1].type = 'lineEnding';\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === 'linePrefix' || tailEvent[1].type === 'blockQuotePrefix' || tailEvent[1].type === 'blockQuotePrefixWhitespace' || tailEvent[1].type === 'blockQuoteMarker' || tailEvent[1].type === 'listItemIndent') {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value;\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key];\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler]);\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    };\n    return node;\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n    return node;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      setData('expectingFirstListItemValue');\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return;\n    this.buffer();\n    setData('flowCodeInside', true);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    setData('flowCodeInside');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    let tail = node.children[node.children.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      };\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      setData('atHardBreak');\n      return;\n    }\n    if (!getData('setextHeadingSlurpLineEnding') && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    setData('referenceType');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    setData('referenceType');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    setData('inReference', true);\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    setData('referenceType', 'full');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = getData('characterReferenceType');\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === 'characterReferenceMarkerNumeric' ? 10 : 16);\n      setData('characterReferenceType');\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack.pop();\n    tail.value += value;\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key];\n        if (right) {\n          combined[key].push(...right);\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key];\n        if (right) {\n          combined[key].push(...right);\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key];\n        if (right) {\n          Object.assign(combined[key], right);\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport { fromMarkdown } from 'mdast-util-from-markdown';\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = doc => {\n    // Assume options.\n    const settings = /** @type {Options} */this.data('settings');\n    return fromMarkdown(doc, Object.assign({}, settings, options, {\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: this.data('micromarkExtensions') || [],\n      mdastExtensions: this.data('fromMarkdownExtensions') || []\n    }));\n  };\n  Object.assign(this, {\n    Parser: parser\n  });\n}","/**\n * @typedef {import('unist').Node} Node\n */\n\n/**\n * @typedef {Array<Node> | string} ChildrenOrValue\n *   List to use as `children` or value to use as `value`.\n *\n * @typedef {Record<string, unknown>} Props\n *   Other fields to add to the node.\n */\n\n/**\n * Build a node.\n *\n * @param type\n *   Node type.\n * @param props\n *   Fields assigned to node.\n * @param value\n *   Children of node or value of `node` (cast to string).\n * @returns\n *   Built node.\n */\nexport const u =\n/**\n * @type {(\n *   (<T extends string>(type: T) => {type: T}) &\n *   (<T extends string, P extends Props>(type: T, props: P) => {type: T} & P) &\n *   (<T extends string>(type: T, value: string) => {type: T, value: string}) &\n *   (<T extends string, P extends Props>(type: T, props: P, value: string) => {type: T, value: string} & P) &\n *   (<T extends string, C extends Array<Node>>(type: T, children: C) => {type: T, children: C}) &\n *   (<T extends string, P extends Props, C extends Array<Node>>(type: T, props: P, children: C) => {type: T, children: C} & P)\n * )}\n */\n\n/**\n * @param {string} type\n * @param {Props | ChildrenOrValue | null | undefined} [props]\n * @param {ChildrenOrValue | null | undefined} [value]\n * @returns {Node}\n */\nfunction (type, props, value) {\n  /** @type {Node} */\n  const node = {\n    type: String(type)\n  };\n  if ((value === undefined || value === null) && (typeof props === 'string' || Array.isArray(props))) {\n    value = props;\n  } else {\n    Object.assign(node, props);\n  }\n  if (Array.isArray(value)) {\n    // @ts-expect-error: create a parent.\n    node.children = value;\n  } else if (value !== undefined && value !== null) {\n    // @ts-expect-error: create a literal.\n    node.value = String(value);\n  }\n  return node;\n};","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n/**\n * @type {(\n *   (() => false) &\n *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n * )}\n */\n\n/**\n * @param {unknown} [node]\n * @param {Test} [test]\n * @param {number | null | undefined} [index]\n * @param {Parent | null | undefined} [parent]\n * @param {unknown} [context]\n * @returns {boolean}\n */\n// eslint-disable-next-line max-params\nfunction is(node, test, index, parent, context) {\n  const check = convert(test);\n  if (index !== undefined && index !== null && (typeof index !== 'number' || index < 0 || index === Number.POSITIVE_INFINITY)) {\n    throw new Error('Expected positive finite index');\n  }\n  if (parent !== undefined && parent !== null && (!is(parent) || !parent.children)) {\n    throw new Error('Expected parent node');\n  }\n  if ((parent === undefined || parent === null) !== (index === undefined || index === null)) {\n    throw new Error('Expected both parent and index');\n  }\n\n  // @ts-expect-error Looks like a node.\n  return node && node.type && typeof node.type === 'string' ? Boolean(check.call(context, node, index, parent)) : false;\n};\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n/**\n * @type {(\n *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n *   ((test?: Test) => AssertAnything)\n * )}\n */\n\n/**\n * @param {Test} [test]\n * @returns {AssertAnything}\n */\nfunction (test) {\n  if (test === undefined || test === null) {\n    return ok;\n  }\n  if (typeof test === 'string') {\n    return typeFactory(test);\n  }\n  if (typeof test === 'object') {\n    return Array.isArray(test) ? anyFactory(test) : propsFactory(test);\n  }\n  if (typeof test === 'function') {\n    return castFactory(test);\n  }\n  throw new Error('Expected function, string, or object as test');\n};\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = [];\n  let index = -1;\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index]);\n  }\n  return castFactory(any);\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any() {\n    let index = -1;\n    for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {\n      parameters[_key] = arguments[_key];\n    }\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all);\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key;\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false;\n    }\n    return true;\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type);\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check;\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion;\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node) {\n    for (var _len2 = arguments.length, parameters = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      parameters[_key2 - 1] = arguments[_key2];\n    }\n    return Boolean(node && typeof node === 'object' && 'type' in node &&\n    // @ts-expect-error: fine.\n    Boolean(check.call(this, node, ...parameters)));\n  }\n}\nfunction ok() {\n  return true;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport { convert } from 'unist-util-is';\nimport { color } from './color.js';\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true;\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false;\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip';\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n/**\n * @type {(\n *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n * )}\n */\n\n/**\n * @param {Node} tree\n * @param {Test} test\n * @param {Visitor<Node>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {void}\n */\nfunction (tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test;\n    test = null;\n  }\n  const is = convert(test);\n  const step = reverse ? -1 : 1;\n  factory(tree, undefined, [])();\n\n  /**\n   * @param {Node} node\n   * @param {number | undefined} index\n   * @param {Array<Parent>} parents\n   */\n  function factory(node, index, parents) {\n    /** @type {Record<string, unknown>} */\n    // @ts-expect-error: hush\n    const value = node && typeof node === 'object' ? node : {};\n    if (typeof value.type === 'string') {\n      const name =\n      // `hast`\n      typeof value.tagName === 'string' ? value.tagName :\n      // `xast`\n      typeof value.name === 'string' ? value.name : undefined;\n      Object.defineProperty(visit, 'name', {\n        value: 'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      });\n    }\n    return visit;\n    function visit() {\n      /** @type {ActionTuple} */\n      let result = [];\n      /** @type {ActionTuple} */\n      let subresult;\n      /** @type {number} */\n      let offset;\n      /** @type {Array<Parent>} */\n      let grandparents;\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents));\n        if (result[0] === EXIT) {\n          return result;\n        }\n      }\n\n      // @ts-expect-error looks like a parent.\n      if (node.children && result[0] !== SKIP) {\n        // @ts-expect-error looks like a parent.\n        offset = (reverse ? node.children.length : -1) + step;\n        // @ts-expect-error looks like a parent.\n        grandparents = parents.concat(node);\n\n        // @ts-expect-error looks like a parent.\n        while (offset > -1 && offset < node.children.length) {\n          // @ts-expect-error looks like a parent.\n          subresult = factory(node.children[offset], offset, grandparents)();\n          if (subresult[0] === EXIT) {\n            return subresult;\n          }\n          offset = typeof subresult[1] === 'number' ? subresult[1] : offset + step;\n        }\n      }\n      return result;\n    }\n  }\n};\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    return [CONTINUE, value];\n  }\n  return [value];\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport { visitParents } from 'unist-util-visit-parents';\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n/**\n * @type {(\n *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n * )}\n */\n\n/**\n * @param {Node} tree\n * @param {Test} test\n * @param {Visitor} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {void}\n */\nfunction (tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n  visitParents(tree, test, overload, reverse);\n\n  /**\n   * @param {Node} node\n   * @param {Array<Parent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1];\n    return visitor(node, parent ? parent.children.indexOf(node) : null, parent);\n  }\n};\nexport { CONTINUE, EXIT, SKIP } from 'unist-util-visit-parents';","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start');\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end');\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {\n    start: pointStart(node),\n    end: pointEnd(node)\n  };\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point;\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = node && node.position && node.position[type] || {};\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    };\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport { visit } from 'unist-util-visit';\nconst own = {}.hasOwnProperty;\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null);\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node');\n  }\n  visit(tree, 'definition', definition => {\n    const id = clean(definition.identifier);\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition;\n    }\n  });\n  return definition;\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier);\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null;\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase();\n}","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport { u } from 'unist-builder';\nconst own = {}.hasOwnProperty;\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {};\n  if ('value' in node && !(own.call(data, 'hName') || own.call(data, 'hProperties') || own.call(data, 'hChildren'))) {\n    return h.augment(node, u('text', node.value));\n  }\n  return h(node, 'div', all(h, node));\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type;\n  /** @type {Handler} */\n  let fn;\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`');\n  }\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type];\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode;\n  } else {\n    fn = h.unknownHandler;\n  }\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent);\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {\n    ...node,\n    children: all(h, node)\n  } : node;\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = [];\n  if ('children' in parent) {\n    const nodes = parent.children;\n    let index = -1;\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent);\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '');\n          }\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0];\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '');\n            }\n          }\n        }\n        if (Array.isArray(result)) {\n          values.push(...result);\n        } else {\n          values.push(result);\n        }\n      }\n    }\n  }\n  return values;\n}","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr');\n}","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport { u } from 'unist-builder';\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = [];\n  let index = -1;\n  if (loose) {\n    result.push(u('text', '\\n'));\n  }\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'));\n    result.push(nodes[index]);\n  }\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'));\n  }\n  return result;\n}","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { wrap } from '../wrap.js';\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {};\n  const name = node.ordered ? 'ol' : 'ul';\n  const items = all(h, node);\n  let index = -1;\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start;\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index];\n    if (item.type === 'element' && item.tagName === 'li' && item.properties && Array.isArray(item.properties.className) && item.properties.className.includes('task-list-item')) {\n      props.className = ['contains-task-list'];\n      break;\n    }\n  }\n  return h(node, name, props, wrap(items, true));\n}","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { u } from 'unist-builder';\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder;\n  const identifier = String(node.identifier);\n  const index = footnoteOrder.indexOf(identifier);\n  const marker = String(index === -1 ? footnoteOrder.push(identifier) : index + 1);\n  return h(node, 'a', {\n    href: '#fn' + marker,\n    className: ['footnote-ref'],\n    id: 'fnref' + marker,\n    role: 'doc-noteref'\n  }, [h(node.position, 'sup', [u('text', marker)])]);\n}","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport { u } from 'unist-builder';\nimport { all } from './traverse.js';\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType;\n  let suffix = ']';\n  if (subtype === 'collapsed') {\n    suffix += '[]';\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']';\n  }\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix);\n  }\n  const contents = all(h, node);\n  const head = contents[0];\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value;\n  } else {\n    contents.unshift(u('text', '['));\n  }\n  const tail = contents[contents.length - 1];\n  if (tail && tail.type === 'text') {\n    tail.value += suffix;\n  } else {\n    contents.push(u('text', suffix));\n  }\n  return contents;\n}","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport { u } from 'unist-builder';\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node);\n  const loose = parent ? listLoose(parent) : listItemLoose(node);\n  /** @type {Properties} */\n  const props = {};\n  /** @type {Array.<Content>} */\n  const wrapped = [];\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph;\n    if (result[0] && result[0].type === 'element' && result[0].tagName === 'p') {\n      paragraph = result[0];\n    } else {\n      paragraph = h(null, 'p', []);\n      result.unshift(paragraph);\n    }\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '));\n    }\n    paragraph.children.unshift(h(null, 'input', {\n      type: 'checkbox',\n      checked: node.checked,\n      disabled: true\n    }));\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item'];\n  }\n  let index = -1;\n  while (++index < result.length) {\n    const child = result[index];\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (loose || index !== 0 || child.type !== 'element' || child.tagName !== 'p') {\n      wrapped.push(u('text', '\\n'));\n    }\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children);\n    } else {\n      wrapped.push(child);\n    }\n  }\n  const tail = result[result.length - 1];\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'));\n  }\n  return h(node, 'li', props, wrapped);\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread;\n  const children = node.children;\n  let index = -1;\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index]);\n  }\n  return Boolean(loose);\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread;\n  return spread === undefined || spread === null ? node.children.length > 1 : spread;\n}","import { blockquote } from './blockquote.js';\nimport { hardBreak } from './break.js';\nimport { code } from './code.js';\nimport { strikethrough } from './delete.js';\nimport { emphasis } from './emphasis.js';\nimport { footnoteReference } from './footnote-reference.js';\nimport { footnote } from './footnote.js';\nimport { heading } from './heading.js';\nimport { html } from './html.js';\nimport { imageReference } from './image-reference.js';\nimport { image } from './image.js';\nimport { inlineCode } from './inline-code.js';\nimport { linkReference } from './link-reference.js';\nimport { link } from './link.js';\nimport { listItem } from './list-item.js';\nimport { list } from './list.js';\nimport { paragraph } from './paragraph.js';\nimport { root } from './root.js';\nimport { strong } from './strong.js';\nimport { table } from './table.js';\nimport { text } from './text.js';\nimport { thematicBreak } from './thematic-break.js';\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n};\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null;\n}","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { wrap } from '../wrap.js';\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true));\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { u } from 'unist-builder';\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')];\n}","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { u } from 'unist-builder';\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : '';\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/);\n  /** @type {Properties} */\n  const props = {};\n  if (lang) {\n    props.className = ['language-' + lang];\n  }\n  const code = h(node, 'code', props, [u('text', value)]);\n  if (node.meta) {\n    code.data = {\n      meta: node.meta\n    };\n  }\n  return h(node.position, 'pre', [code]);\n}","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node));\n}","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node));\n}","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { footnoteReference } from './footnote-reference.js';\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById;\n  const footnoteOrder = h.footnoteOrder;\n  let no = 1;\n  while (no in footnoteById) no++;\n  const identifier = String(no);\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier);\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{\n      type: 'paragraph',\n      children: node.children\n    }],\n    position: node.position\n  };\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  });\n}","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node));\n}","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { u } from 'unist-builder';\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null;\n}","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js';\nimport { revert } from '../revert.js';\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier);\n  if (!def) {\n    return revert(h, node);\n  }\n\n  /** @type {Properties} */\n  const props = {\n    src: normalize(def.url || ''),\n    alt: node.alt\n  };\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title;\n  }\n  return h(node, 'img', props);\n}","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js';\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {\n    src: normalize(node.url),\n    alt: node.alt\n  };\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title;\n  }\n  return h(node, 'img', props);\n}","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { u } from 'unist-builder';\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))]);\n}","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js';\nimport { revert } from '../revert.js';\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier);\n  if (!def) {\n    return revert(h, node);\n  }\n\n  /** @type {Properties} */\n  const props = {\n    href: normalize(def.url || '')\n  };\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title;\n  }\n  return h(node, 'a', props, all(h, node));\n}","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js';\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {\n    href: normalize(node.url)\n  };\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title;\n  }\n  return h(node, 'a', props, all(h, node));\n}","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node));\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { u } from 'unist-builder';\nimport { all } from '../traverse.js';\nimport { wrap } from '../wrap.js';\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))));\n}","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node));\n}","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport { pointStart, pointEnd } from 'unist-util-position';\nimport { wrap } from '../wrap.js';\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children;\n  let index = -1;\n  const align = node.align || [];\n  /** @type {Array.<Element>} */\n  const result = [];\n  while (++index < rows.length) {\n    const row = rows[index].children;\n    const name = index === 0 ? 'th' : 'td';\n    let pos = node.align ? align.length : row.length;\n    /** @type {Array.<Content>} */\n    const out = [];\n    while (pos--) {\n      const cell = row[pos];\n      out[pos] = h(cell, name, {\n        align: align[pos]\n      }, cell ? all(h, cell) : []);\n    }\n    result[index] = h(rows[index], 'tr', wrap(out, true));\n  }\n  return h(node, 'table', wrap([h(result[0].position, 'thead', wrap([result[0]], true))].concat(result[1] ? h({\n    start: pointStart(result[1]),\n    end: pointEnd(result[result.length - 1])\n  }, 'tbody', wrap(result.slice(1), true)) : []), true));\n}","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport { u } from 'unist-builder';\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1')));\n}","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport { u } from 'unist-builder';\nimport { visit } from 'unist-util-visit';\nimport { pointStart, pointEnd } from 'unist-util-position';\nimport { generated } from 'unist-util-generated';\nimport { definitions } from 'mdast-util-definitions';\nimport { one } from './traverse.js';\nimport { footer } from './footer.js';\nimport { handlers } from './handlers/index.js';\nconst own = {}.hasOwnProperty;\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {};\n  const dangerous = settings.allowDangerousHtml || false;\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {};\n  h.dangerous = dangerous;\n  h.definition = definitions(tree);\n  h.footnoteById = footnoteById;\n  /** @type {Array.<string>} */\n  h.footnoteOrder = [];\n  h.augment = augment;\n  h.handlers = {\n    ...handlers,\n    ...settings.handlers\n  };\n  h.unknownHandler = settings.unknownHandler;\n  h.passThrough = settings.passThrough;\n  visit(tree, 'footnoteDefinition', definition => {\n    const id = String(definition.identifier).toUpperCase();\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition;\n    }\n  });\n\n  // @ts-expect-error Hush, it’s fine!\n  return h;\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data;\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          };\n        }\n        right.tagName = data.hName;\n      }\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {\n          ...right.properties,\n          ...data.hProperties\n        };\n      }\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren;\n      }\n    }\n    if (left) {\n      const ctx = 'type' in left ? left : {\n        position: left\n      };\n      if (!generated(ctx)) {\n        right.position = {\n          start: pointStart(ctx),\n          end: pointEnd(ctx)\n        };\n      }\n    }\n    return right;\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props;\n      props = {};\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    });\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options);\n  const node = one(h, tree, null);\n  const foot = footer(h);\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot);\n  }\n  return Array.isArray(node) ? {\n    type: 'root',\n    children: node\n  } : node;\n}","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return !node || !node.position || !node.position.start || !node.position.start.line || !node.position.start.column || !node.position.end || !node.position.end.line || !node.position.end.column;\n}","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport { thematicBreak } from './handlers/thematic-break.js';\nimport { list } from './handlers/list.js';\nimport { wrap } from './wrap.js';\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById;\n  const footnoteOrder = h.footnoteOrder;\n  let index = -1;\n  /** @type {Array.<ListItem>} */\n  const listItems = [];\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()];\n    if (!def) {\n      continue;\n    }\n    const marker = String(index + 1);\n    const content = [...def.children];\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {\n        hProperties: {\n          className: ['footnote-back'],\n          role: 'doc-backlink'\n        }\n      },\n      children: [{\n        type: 'text',\n        value: '↩'\n      }]\n    };\n    const tail = content[content.length - 1];\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference);\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference);\n    }\n    listItems.push({\n      type: 'listItem',\n      data: {\n        hProperties: {\n          id: 'fn' + marker,\n          role: 'doc-endnote'\n        }\n      },\n      children: content,\n      position: def.position\n    });\n  }\n  if (listItems.length === 0) {\n    return null;\n  }\n  return h(null, 'section', {\n    className: ['footnotes'],\n    role: 'doc-endnotes'\n  }, wrap([thematicBreak(h), list(h, {\n    type: 'list',\n    ordered: true,\n    children: listItems\n  })], true));\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport { toHast } from 'mdast-util-to-hast';\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype = /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n\nfunction (destination, options) {\n  return destination && 'run' in destination ? bridge(destination, options) : mutate(destination);\n};\nexport default remarkRehype;\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, error => {\n      next(error);\n    });\n  };\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return node => toHast(node, options);\n}","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property;\n    this.normal = normal;\n    if (space) {\n      this.space = space;\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {};\n/** @type {Normal} */\nSchema.prototype.normal = {};\n/** @type {string|null} */\nSchema.prototype.space = null;","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport { Schema } from './schema.js';\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  let index = -1;\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n  return new Schema(property, normal, space);\n}","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase();\n}","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property;\n    /** @type {string} */\n    this.attribute = attribute;\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null;\nInfo.prototype.boolean = false;\nInfo.prototype.booleanish = false;\nInfo.prototype.overloadedBoolean = false;\nInfo.prototype.number = false;\nInfo.prototype.commaSeparated = false;\nInfo.prototype.spaceSeparated = false;\nInfo.prototype.commaOrSpaceSeparated = false;\nInfo.prototype.mustUseProperty = false;\nInfo.prototype.defined = false;","let powers = 0;\nexport const boolean = increment();\nexport const booleanish = increment();\nexport const overloadedBoolean = increment();\nexport const number = increment();\nexport const spaceSeparated = increment();\nexport const commaSeparated = increment();\nexport const commaOrSpaceSeparated = increment();\nfunction increment() {\n  return 2 ** ++powers;\n}","import { Info } from './info.js';\nimport * as types from './types.js';\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types);\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1;\n    super(property, attribute);\n    mark(this, 'space', space);\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index];\n        mark(this, checks[index], (mask & types[check]) === types[check]);\n      }\n    }\n  }\n}\nDefinedInfo.prototype.defined = true;\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value;\n  }\n}","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport { normalize } from '../normalize.js';\nimport { Schema } from './schema.js';\nimport { DefinedInfo } from './defined-info.js';\nconst own = {}.hasOwnProperty;\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  /** @type {string} */\n  let prop;\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop];\n      const info = new DefinedInfo(prop, definition.transform(definition.attributes || {}, prop), value, definition.space);\n      if (definition.mustUseProperty && definition.mustUseProperty.includes(prop)) {\n        info.mustUseProperty = true;\n      }\n      property[prop] = info;\n      normal[normalize(prop)] = prop;\n      normal[normalize(info.attribute)] = prop;\n    }\n  }\n  return new Schema(property, normal, definition.space);\n}","import { create } from './util/create.js';\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase();\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});","import { create } from './util/create.js';\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase();\n  },\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n});","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute;\n}","import { caseSensitiveTransform } from './case-sensitive-transform.js';\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase());\n}","import { create } from './util/create.js';\nimport { caseInsensitiveTransform } from './util/case-insensitive-transform.js';\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n});","import { booleanish, number, spaceSeparated } from './util/types.js';\nimport { create } from './util/create.js';\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase();\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});","import { boolean, overloadedBoolean, booleanish, number, spaceSeparated, commaSeparated } from './util/types.js';\nimport { create } from './util/create.js';\nimport { caseInsensitiveTransform } from './util/case-insensitive-transform.js';\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null,\n    // Several. Use CSS `text-align` instead,\n    aLink: null,\n    // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated,\n    // `<object>`. List of URIs to archives\n    axis: null,\n    // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null,\n    // `<body>`. Use CSS `background-image` instead\n    bgColor: null,\n    // `<body>` and table elements. Use CSS `background-color` instead\n    border: number,\n    // `<table>`. Use CSS `border-width` instead,\n    borderColor: null,\n    // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number,\n    // `<body>`\n    cellPadding: null,\n    // `<table>`\n    cellSpacing: null,\n    // `<table>`\n    char: null,\n    // Several table elements. When `align=char`, sets the character to align on\n    charOff: null,\n    // Several table elements. When `char`, offsets the alignment\n    classId: null,\n    // `<object>`\n    clear: null,\n    // `<br>`. Use CSS `clear` instead\n    code: null,\n    // `<object>`\n    codeBase: null,\n    // `<object>`\n    codeType: null,\n    // `<object>`\n    color: null,\n    // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean,\n    // Lists. Use CSS to reduce space between items instead\n    declare: boolean,\n    // `<object>`\n    event: null,\n    // `<script>`\n    face: null,\n    // `<font>`. Use CSS instead\n    frame: null,\n    // `<table>`\n    frameBorder: null,\n    // `<iframe>`. Use CSS `border` instead\n    hSpace: number,\n    // `<img>` and `<object>`\n    leftMargin: number,\n    // `<body>`\n    link: null,\n    // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null,\n    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null,\n    // `<img>`. Use a `<picture>`\n    marginHeight: number,\n    // `<body>`\n    marginWidth: number,\n    // `<body>`\n    noResize: boolean,\n    // `<frame>`\n    noHref: boolean,\n    // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean,\n    // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean,\n    // `<td>` and `<th>`\n    object: null,\n    // `<applet>`\n    profile: null,\n    // `<head>`\n    prompt: null,\n    // `<isindex>`\n    rev: null,\n    // `<link>`\n    rightMargin: number,\n    // `<body>`\n    rules: null,\n    // `<table>`\n    scheme: null,\n    // `<meta>`\n    scrolling: booleanish,\n    // `<frame>`. Use overflow in the child context\n    standby: null,\n    // `<object>`\n    summary: null,\n    // `<table>`\n    text: null,\n    // `<body>`. Use CSS `color` instead\n    topMargin: number,\n    // `<body>`\n    valueType: null,\n    // `<param>`\n    version: null,\n    // `<html>`. Use a doctype.\n    vAlign: null,\n    // Several. Use CSS `vertical-align` instead\n    vLink: null,\n    // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number,\n    // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});","import { boolean, number, spaceSeparated, commaSeparated, commaOrSpaceSeparated } from './util/types.js';\nimport { create } from './util/create.js';\nimport { caseSensitiveTransform } from './util/case-sensitive-transform.js';\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null,\n    // SEMI_COLON_SEPARATED\n    keySplines: null,\n    // SEMI_COLON_SEPARATED\n    keyTimes: null,\n    // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n});","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport { merge } from './lib/util/merge.js';\nimport { xlink } from './lib/xlink.js';\nimport { xml } from './lib/xml.js';\nimport { xmlns } from './lib/xmlns.js';\nimport { aria } from './lib/aria.js';\nimport { html as htmlBase } from './lib/html.js';\nimport { svg as svgBase } from './lib/svg.js';\nexport { find } from './lib/find.js';\nexport { hastToReact } from './lib/hast-to-react.js';\nexport { normalize } from './lib/normalize.js';\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html');\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg');","import { visit } from 'unist-util-visit';\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError('Only one of `allowedElements` and `disallowedElements` should be defined');\n  }\n  if (options.allowedElements || options.disallowedElements || options.allowElement) {\n    return tree => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */parent_;\n        /** @type {boolean|undefined} */\n        let remove;\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName);\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName);\n        }\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent);\n        }\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children);\n          } else {\n            parent.children.splice(index, 1);\n          }\n          return index;\n        }\n        return undefined;\n      });\n    };\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport { visitParents } from 'unist-util-visit-parents';\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n/**\n * @type {(\n *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n * )}\n */\n\n/**\n * @param {Node} tree\n * @param {Test} test\n * @param {Visitor} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {void}\n */\nfunction (tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n  visitParents(tree, test, overload, reverse);\n\n  /**\n   * @param {Node} node\n   * @param {Array<Parent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1];\n    return visitor(node, parent ? parent.children.indexOf(node) : null, parent);\n  }\n};\nexport { CONTINUE, EXIT, SKIP } from 'unist-util-visit-parents';","const protocols = ['http', 'https', 'mailto', 'tel'];\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim();\n  const first = url.charAt(0);\n  if (first === '#' || first === '/') {\n    return url;\n  }\n  const colon = url.indexOf(':');\n  if (colon === -1) {\n    return url;\n  }\n  let index = -1;\n  while (++index < protocols.length) {\n    const protocol = protocols[index];\n    if (colon === protocol.length && url.slice(0, protocol.length).toLowerCase() === protocol) {\n      return url;\n    }\n  }\n  index = url.indexOf('?');\n  if (index !== -1 && colon > index) {\n    return url;\n  }\n  index = url.indexOf('#');\n  if (index !== -1 && colon > index) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)';\n}","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n  // @ts-expect-error looks like a node.\n  thing && typeof thing === 'object' && thing.type === 'text' ?\n  // @ts-expect-error looks like a text.\n  thing.value || '' : thing;\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === '';\n}","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport { normalize } from './normalize.js';\nimport { DefinedInfo } from './util/defined-info.js';\nimport { Info } from './util/info.js';\nconst valid = /^data[-\\w.:]+$/i;\nconst dash = /-[a-z]/g;\nconst cap = /[A-Z]/g;\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value);\n  let prop = value;\n  let Type = Info;\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]];\n  }\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase);\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1);\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4);\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab);\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes;\n        }\n        value = 'data' + dashes;\n      }\n    }\n    Type = DefinedInfo;\n  }\n  return new Type(prop, value);\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase();\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase();\n}","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n};","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react';\nimport ReactIs from 'react-is';\nimport { whitespace } from 'hast-util-whitespace';\nimport { svg, find, hastToReact } from 'property-information';\nimport { stringify as spaces } from 'space-separated-tokens';\nimport { stringify as commas } from 'comma-separated-tokens';\nimport style from 'style-to-object';\nconst own = {}.hasOwnProperty;\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr']);\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = [];\n  let childIndex = -1;\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child;\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex];\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node));\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (node.type !== 'element' || !tableElements.has(node.tagName) || !whitespace(child)) {\n        children.push(child.value);\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value);\n    }\n  }\n  return children;\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options;\n  const parentSchema = context.schema;\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName;\n  /** @type {Record<string, unknown>} */\n  const properties = {};\n  let schema = parentSchema;\n  /** @type {string} */\n  let property;\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg;\n    context.schema = schema;\n  }\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context);\n      }\n    }\n  }\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++;\n  }\n  const children = childrenToReact(context, node);\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--;\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema;\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {\n      line: null,\n      column: null,\n      offset: null\n    },\n    end: {\n      line: null,\n      column: null,\n      offset: null\n    }\n  };\n  const component = options.components && own.call(options.components, name) ? options.components[name] : name;\n  const basic = typeof component === 'string' || component === React.Fragment;\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\"Component for name `\".concat(name, \"` not defined or is not renderable\"));\n  }\n  properties.key = [name, position.start.line, position.start.column, index].join('-');\n  if (name === 'a' && options.linkTarget) {\n    properties.target = typeof options.linkTarget === 'function' ? options.linkTarget(String(properties.href || ''), node.children, typeof properties.title === 'string' ? properties.title : null) : options.linkTarget;\n  }\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(String(properties.href || ''), node.children, typeof properties.title === 'string' ? properties.title : null);\n  }\n  if (!basic && name === 'code' && parent.type === 'element' && parent.tagName !== 'pre') {\n    properties.inline = true;\n  }\n  if (!basic && (name === 'h1' || name === 'h2' || name === 'h3' || name === 'h4' || name === 'h5' || name === 'h6')) {\n    properties.level = Number.parseInt(name.charAt(1), 10);\n  }\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(String(properties.src || ''), String(properties.alt || ''), typeof properties.title === 'string' ? properties.title : null);\n  }\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node);\n    properties.checked = input && input.properties ? Boolean(input.properties.checked) : null;\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.ordered = parent.tagName === 'ol';\n  }\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol';\n    properties.depth = context.listDepth;\n  }\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {};\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align;\n      delete properties.align;\n    }\n    if (!basic) {\n      properties.isHeader = name === 'th';\n    }\n  }\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead');\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position);\n  }\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position;\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.siblingCount = getElementsBeforeCount(parent);\n  }\n  if (!basic) {\n    properties.node = node;\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0 ? React.createElement(component, properties, children) : React.createElement(component, properties);\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1;\n  while (++index < node.children.length) {\n    const child = node.children[index];\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1;\n  let count = 0;\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break;\n    if (parent.children[index].type === 'element') count++;\n  }\n  return count;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop);\n  let result = value;\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return;\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result);\n  }\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result);\n  }\n  if (info.space && info.property) {\n    props[own.call(hastToReact, info.property) ? hastToReact[info.property] : info.property] = result;\n  } else if (info.attribute) {\n    props[info.attribute] = result;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {};\n  try {\n    style(value, iterator);\n  } catch {\n    // Silent.\n  }\n  return result;\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? \"ms-\".concat(name.slice(4)) : name;\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v;\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase();\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [pos.start.line, ':', pos.start.column, '-', pos.end.line, ':', pos.end.column].map(d => String(d)).join('');\n}","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = [];\n  const input = String(value || '');\n  let index = input.indexOf(',');\n  let start = 0;\n  /** @type {boolean} */\n  let end = false;\n  while (!end) {\n    if (index === -1) {\n      index = input.length;\n      end = true;\n    }\n    const token = input.slice(start, index).trim();\n    if (token || !end) {\n      tokens.push(token);\n    }\n    start = index + 1;\n    index = input.indexOf(',', start);\n  }\n  return tokens;\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {};\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values;\n  return input.join((settings.padRight ? ' ' : '') + ',' + (settings.padLeft === false ? '' : ' ')).trim();\n}","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim();\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : [];\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim();\n}","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react';\nimport { VFile } from 'vfile';\nimport { unified } from 'unified';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport PropTypes from 'prop-types';\nimport { html } from 'property-information';\nimport rehypeFilter from './rehype-filter.js';\nimport { uriTransformer } from './uri-transformer.js';\nimport { childrenToReact } from './ast-to-react.js';\nconst own = {}.hasOwnProperty;\nconst changelog = 'https://github.com/remarkjs/react-markdown/blob/main/changelog.md';\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  renderers: {\n    to: 'components',\n    id: 'change-renderers-to-components'\n  },\n  astPlugins: {\n    id: 'remove-buggy-html-in-markdown-parser'\n  },\n  allowDangerousHtml: {\n    id: 'remove-buggy-html-in-markdown-parser'\n  },\n  escapeHtml: {\n    id: 'remove-buggy-html-in-markdown-parser'\n  },\n  source: {\n    to: 'children',\n    id: 'change-source-to-children'\n  },\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n};\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key];\n      console.warn(\"[react-markdown] Warning: please \".concat(deprecation.to ? \"use `\".concat(deprecation.to, \"` instead of\") : 'remove', \" `\").concat(key, \"` (see <\").concat(changelog, \"#\").concat(deprecation.id, \"> for more info)\"));\n      delete deprecated[key];\n    }\n  }\n  const processor = unified().use(remarkParse)\n  // TODO: deprecate `plugins` in v8.0.0.\n  .use(options.remarkPlugins || options.plugins || []).use(remarkRehype, {\n    allowDangerousHtml: true\n  }).use(options.rehypePlugins || []).use(rehypeFilter, options);\n  const file = new VFile();\n  if (typeof options.children === 'string') {\n    file.value = options.children;\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\"[react-markdown] Warning: please pass a string as `children` (not: `\".concat(options.children, \"`)\"));\n  }\n  const hastNode = processor.runSync(processor.parse(file), file);\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node');\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(React.Fragment, {}, childrenToReact({\n    options,\n    schema: html,\n    listDepth: 0\n  }, hastNode));\n  if (options.className) {\n    result = React.createElement('div', {\n      className: options.className\n    }, result);\n  }\n  return result;\n}\nReactMarkdown.defaultProps = {\n  transformLinkUri: uriTransformer\n};\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))])),\n  rehypePlugins: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))])),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n};","import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport SEO from \"../components/seo\"\nimport Image from \"../components/image\"\nimport ReactMarkdown from \"react-markdown\"\n\nexport default function Work({ data }) {\n  const basicInfo = data.basicInfoYaml.basic_info\n  const work = data.workYaml.work\n  const projects = data.projectsYaml.projects\n\n  console.log(basicInfo, work, projects)\n  return (\n    <Layout title=\"work\">\n      <SEO title=\"Work\" />\n\n      <div style={{ marginRight: \"10%\" }}>\n        {/* <h2> {basicInfo.email} </h2> */}\n        <div id=\"work\">\n          <ul style={{ margin: \"1%\" }}>\n            {work.map((data, index) => {\n              return (\n                <li key={`work_${index}`} style={{ listStyleType: \"none\" }}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      verticalAlign: \"middle\",\n                      alignItems: \"middle\",\n                      marginBottom: \"0%\",\n                      marginTop: \"2%\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        flexGrow: 1,\n                        width: \"10%\",\n                        marginRight: \"3%\",\n                      }}\n                    >\n                      <Image\n                        filename={data.img}\n                        maxHeight={\"15vh\"}\n                        imgStyle={{\n                          objectFit: \"scale-down\",\n                          objectPosition: \"left\",\n                          borderWidth: \"5px\",\n                          borderColor: \"black\",\n                          borderRadius: \"10%\",\n                        }}\n                      />\n                    </div>\n\n                    <div style={{ width: \"90%\" }}>\n                      <div style={{ marginBottom: \"2%\" }}>\n                        <div>\n                          <h3>{data.place}</h3>\n                        </div>\n                        <div>\n                          <div style={{ float: \"right\" }}>\n                            <h4>{data.duration}</h4>\n                          </div>\n                          <div>\n                            <h4>{data.position}</h4>\n                          </div>\n                          <div style={{ float: \"right\" }}>\n                            <h4>{data.location}</h4>\n                          </div>\n                        </div>\n                      </div>\n                      <div style={{ margin: \"1%\", marginTop: \"1%\" }}>\n                        <ReactMarkdown>{data.summary}</ReactMarkdown>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    basicInfoYaml {\n      basic_info {\n        name\n        image\n        email\n        phone\n        url\n        summary\n        location {\n          city\n          countryCode\n          region\n        }\n        social {\n          github\n        }\n      }\n    }\n\n    workYaml {\n      work {\n        place\n        duration\n        summary\n        position\n        location\n        img\n      }\n    }\n\n    projectsYaml {\n      projects {\n        name\n        keywords\n        description\n        img\n        linkrepo\n        linkdemo\n      }\n    }\n  }\n`\n","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar b = 60103,\n  c = 60106,\n  d = 60107,\n  e = 60108,\n  f = 60114,\n  g = 60109,\n  h = 60110,\n  k = 60112,\n  l = 60113,\n  m = 60120,\n  n = 60115,\n  p = 60116,\n  q = 60121,\n  r = 60122,\n  u = 60117,\n  v = 60129,\n  w = 60131;\nif (\"function\" === typeof Symbol && Symbol.for) {\n  var x = Symbol.for;\n  b = x(\"react.element\");\n  c = x(\"react.portal\");\n  d = x(\"react.fragment\");\n  e = x(\"react.strict_mode\");\n  f = x(\"react.profiler\");\n  g = x(\"react.provider\");\n  h = x(\"react.context\");\n  k = x(\"react.forward_ref\");\n  l = x(\"react.suspense\");\n  m = x(\"react.suspense_list\");\n  n = x(\"react.memo\");\n  p = x(\"react.lazy\");\n  q = x(\"react.block\");\n  r = x(\"react.server.block\");\n  u = x(\"react.fundamental\");\n  v = x(\"react.debug_trace_mode\");\n  w = x(\"react.legacy_hidden\");\n}\nfunction y(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var t = a.$$typeof;\n    switch (t) {\n      case b:\n        switch (a = a.type, a) {\n          case d:\n          case f:\n          case e:\n          case l:\n          case m:\n            return a;\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case h:\n              case k:\n              case p:\n              case n:\n              case g:\n                return a;\n              default:\n                return t;\n            }\n        }\n      case c:\n        return t;\n    }\n  }\n}\nvar z = g,\n  A = b,\n  B = k,\n  C = d,\n  D = p,\n  E = n,\n  F = c,\n  G = f,\n  H = e,\n  I = l;\nexports.ContextConsumer = h;\nexports.ContextProvider = z;\nexports.Element = A;\nexports.ForwardRef = B;\nexports.Fragment = C;\nexports.Lazy = D;\nexports.Memo = E;\nexports.Portal = F;\nexports.Profiler = G;\nexports.StrictMode = H;\nexports.Suspense = I;\nexports.isAsyncMode = function () {\n  return !1;\n};\nexports.isConcurrentMode = function () {\n  return !1;\n};\nexports.isContextConsumer = function (a) {\n  return y(a) === h;\n};\nexports.isContextProvider = function (a) {\n  return y(a) === g;\n};\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === b;\n};\nexports.isForwardRef = function (a) {\n  return y(a) === k;\n};\nexports.isFragment = function (a) {\n  return y(a) === d;\n};\nexports.isLazy = function (a) {\n  return y(a) === p;\n};\nexports.isMemo = function (a) {\n  return y(a) === n;\n};\nexports.isPortal = function (a) {\n  return y(a) === c;\n};\nexports.isProfiler = function (a) {\n  return y(a) === f;\n};\nexports.isStrictMode = function (a) {\n  return y(a) === e;\n};\nexports.isSuspense = function (a) {\n  return y(a) === l;\n};\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === d || a === f || a === v || a === e || a === l || a === m || a === w || \"object\" === typeof a && null !== a && (a.$$typeof === p || a.$$typeof === n || a.$$typeof === g || a.$$typeof === h || a.$$typeof === k || a.$$typeof === u || a.$$typeof === q || a[0] === r) ? !0 : !1;\n};\nexports.typeOf = y;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styles from '../styles/global.css'\n// Note: You can change \"images\" to whatever you'd like.\n\nconst Image = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 750) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.filename);\n      });\n      if (!image) {\n        return null;\n      }\n\n      //const imageSizes = image.node.childImageSharp.sizes; sizes={imageSizes}\n      return <Img alt={props.alt}  fluid={image.node.childImageSharp.fluid} \n      style={{ margin: '0rem', maxHeight: props.maxHeight}}\n            imgStyle={props.imgStyle}\n      />;\n    }}\n  />\n);\n\nexport default Image;\n","'use strict';\n\nvar encodeCache = {};\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i,\n    ch,\n    cache = encodeCache[exclude];\n  if (cache) {\n    return cache;\n  }\n  cache = encodeCache[exclude] = [];\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n  return cache;\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n    l,\n    code,\n    nextCode,\n    cache,\n    result = '';\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n  cache = getEncodeCache(exclude);\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n    result += encodeURIComponent(string[i]);\n  }\n  return result;\n}\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;"],"sourceRoot":""}