{"componentChunkName":"component---src-templates-note-post-js","path":"/design-recipe/","result":{"data":{"markdownRemark":{"html":"<p>The design recipe is an integral part of HtDP. It's a systematic approach to developing functions that are well documented and tested. </p>\n<h2>Components of the design recipe</h2>\n<ol>\n<li><strong>Purpose</strong>: Describe what the function computes.</li>\n<li><strong>Contract</strong>: Describe what arguments the function consumes and the type of value it produces.</li>\n<li><strong>Examples</strong>: Illustrate the typical use of the function.</li>\n<li><strong>Definition</strong>: The actual code for the function.</li>\n<li><strong>Tests</strong>: A set of function applications and their expected values.</li>\n</ol>\n<h2>Recommended order of following the Design Recipe</h2>\n<ol>\n<li>Write a draft of the <strong>Purpose</strong></li>\n<li>Write <strong>Examples</strong> (by hand, then code)</li>\n<li>Write Definition <strong>Header</strong> and <strong>Contract</strong></li>\n<li>Finalize the purpose with parameter names</li>\n<li>Write <strong>Definition</strong> body</li>\n<li>Write <strong>Tests</strong></li>\n</ol>\n<h2>Using the Design Recipe</h2>\n<div class=\"gatsby-highlight\" data-language=\"scheme\"><pre class=\"language-scheme\"><code class=\"language-scheme\"><span class=\"token comment\">;; [PURPOSE] (sum-of-squares n1 n2) produces the sum of squares of n1 and n2.</span>\n<span class=\"token comment\">;; [EXAMPLE] Examples:</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">check-expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sum-of-squares</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">;; [HEADER AND CONTRACT] sum-of-squares: Num Num â†’ Num </span>\n<span class=\"token comment\">;; [DEFINITION]</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">define</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sum-of-squares</span> n1 n2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sqr</span> n1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sqr</span> n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">;; [TESTS] Tests</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">check-expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sum-of-squares</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">check-expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sum-of-squares</span> <span class=\"token number\">-2</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token number\">53</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">check-expect</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sum-of-squares</span> <span class=\"token number\">0</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span> <span class=\"token number\">6.25</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1>Data Definitions</h1>\n<p>A data definition specifies how to represent a piece of information in the real world as data in a program. It also provides documentation on how to interpret the data back into information. It also provides a template and examples for how to operate on the data.</p>\n<p>For example, consider modelling a traffic light. Here is a function that provides the next colour in a traffic light:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token function\">define</span> <span class=\"token punctuation\">(</span>next<span class=\"token operator\">-</span>color c<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span>cond \n        <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">=</span> c <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">=</span> c <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">=</span> c <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Although we can understand what the function does, we do not understand the data that it is acting on. What is <code class=\"language-text\">c</code>? Can c be 3 or more, or negative? </p>\n<p>The problem of ambiguity can be solved by providing a data definition:</p>\n<div class=\"gatsby-highlight\" data-language=\"scheme\"><pre class=\"language-scheme\"><code class=\"language-scheme\"><span class=\"token comment\">;; TLColor is one of:</span>\n<span class=\"token comment\">;; - 0</span>\n<span class=\"token comment\">;; - 1</span>\n<span class=\"token comment\">;; - 2</span>\n<span class=\"token comment\">;; interpretation: the color of a traffic light: 0 is red, 1 yellow, 2 green</span></code></pre></div>\n<p>We now see that <code class=\"language-text\">c</code> must be a <code class=\"language-text\">TLColor</code> and therefore can only be 0, 1, or 2. We also know that <code class=\"language-text\">c</code> represents the color of a traffic light, even if it maps to a natural number.</p>","frontmatter":{"title":"HTDP2: The Design Recipe"}}},"pageContext":{"slug":"/design-recipe/"}},"staticQueryHashes":["4188439704"]}