{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"basicInfoYaml":{"basic_info":{"name":"Justin Leung","image":"","email":"justin.leung.ch@gmail.com","phone":"","url":"https://justinleung.me","summary":"<p> I'm a Computer Science student at the University of Waterloo. I previously worked at Queen's University Software Analysis and Intelligence Lab (SAIL), where I applied traditional machine learning techniques to provide insights to software engineering. Programming is a passion of mine - don't take my word for it, take a look at the <a href=\"#work\">work</a> and <a href=\"#projects\">projects</a> I've done throughout the years. In my spare time, I enjoy exercising, reading, and cooking. </p>","location":{"city":"Ottawa","countryCode":"CA","region":"ON"},"social":{"github":"leungjch"}}},"workYaml":{"work":[{"place":"Software Analysis and Intelligence Lab, Queen's University","duration":"Apr. — Sept. 2020","summary":"Led project on Medium mining","position":"Research Intern"},{"place":"Software Analysis and Intelligence Lab, Queen's University","duration":"Jul. — Oct. 2019","summary":"Used R and Python to preprocess and model 19.3M messages to study the Stack Overflow chat platform.","position":"Research Intern"}]},"projectsYaml":{"projects":[{"name":"Emoji Ninja: P2P AI-Powered Fitness Webgame","keywords":"javascript, node.js, react, express, p5.js, simple-peer, posenet","description":null,"img":null,"linkrepo":"https://github.com/leungjch/posenet-game-peer2peer","linkdemo":"https://posenet-game-p2p-react.herokuapp.com/"},{"name":"Cellular Automata Explorer","keywords":"react, bootstrap, three.js, d3.js, webapp, p5.js,","description":"A full-fledged cellular automata simulation built with React and styled with Bootstrap, complete with 28 rule variants, various customizable parameters, a time machine, 3D rendering using three.js with option to download model as .obj, and live graphing of cell population with d3.js. Completed as part of the Harvard CS50X final project.","img":"webm/cellular.webm","linkrepo":"https://github.com/leungjch/cellular-automata-webapp","linkdemo":"https://justinleung.me/cellular-automata-webapp/"},{"name":"Druglike Molecule Generation with Variational Autoencoders","keywords":"python, tensorflow, keras, deep-learning, chemistry","description":null,"img":"images/projects/drug_vae.png","linkrepo":"https://github.com/leungjch/drug_VAE","linkdemo":""},{"name":"PixelPaper: Infinite Wallpaper Generator App","keywords":"java, android, procedural-generation, personalization","description":null,"img":"images/projects/pixelpaper.png","linkrepo":"https://github.com/leungjch/WallpaperGenerator_App","linkdemo":"https://play.google.com/store/apps/details?id=com.pixelpaper.pixelpaper.wallpapergenerator"},{"name":"Magnetic Pendulum","keywords":"python, numerical-integration, chaos-theory","description":null,"img":"images/projects/magnetic_pendulum_collage.png","linkrepo":"https://github.com/leungjch/Magnetic-Pendulum","linkdemo":""},{"name":"Epicycles Simulator","keywords":"javascript, p5.js, math","description":null,"img":"webm/epicycle.webm","linkrepo":"https://github.com/leungjch/epicycles.js","linkdemo":"https://justinleung.me/epicycles.js/"},{"name":"Snake Neural Network with Genetic Algorithms","keywords":"python, numpy, neural-network, genetic-algorithm","description":"A neural network built from scratch using Numpy matrices and trained to play Snake, generalizable to any game tile size. The neural network is trained using genetic algorithm concepts and techniques (tournament selection, random mutation, and fitness)","img":"webm/snake.webm","linkrepo":"https://github.com/leungjch/snake_AI","linkdemo":""},{"name":"Cookie or Donut Neural Network","keywords":"python, java, neural-network, multiclass-classification","description":"A vanilla neural network that classifies a doodle (a 256x256 grayscale bitmap) as a cookie, a donut, or neither. Trained using backpropagation algorithm on doodles from Google Quick, Draw! dataset (~1M images). Runs on Android. Neural network implemented from scratch using Numpy linear algebra module, weights transferred to a Java implementation of a prediction-only neural network I made using the ojAlgo library.","img":"images/projects/donut_cookie.png","linkrepo":"https://github.com/leungjch/donut_or_cookie_neuralnet","linkdemo":""},{"name":"DIY VR Styrofoam Headset","keywords":"vr, arduino, c++, hardware, openvr, steamvr","description":"A VR headset built from scratch. Head tracking was done using the MPU-6050 gyroscope and accelerometer sensor (~$30), which is sent to the Arduino Micro and converted into mouse input. Fully compatible with all SteamVR games. The headset display is my phone, which streams video my desktop.","img":"webm/vr_mute.webm","linkrepo":"https://github.com/leungjch/arduino-styrofoam-VR","linkdemo":""},{"name":"Arduino Pen Plotter","keywords":"arduino, hardware, gcode","description":null,"img":"webm/plotter.webm","linkrepo":"https://github.com/leungjch/arduino_plotter","linkdemo":""},{"name":"Chemical Equilibrium Simulation","keywords":"python, pygame, simulation, chemistry, le-chateliers-principle","description":null,"img":"images/projects/magnetic_pendulum.png","linkrepo":"https://github.com/leungjch/chem_equilibrium_simulation","linkdemo":""},{"name":"Mulander: A Lunar Lander Clone","keywords":"actionscript, gamedev, lunar-lander","description":"A clone of the classic lunar lander game, where the objective is to safely land on landing zones while being mindful of speed, alignment, and fuel (it's harder than it looks!). Features an infinite landscape using the midpoint displacement algorithm. Made for my Grade 11 Computer Science final project, which I took in Grade 10.","img":"images/projects/mulander_crop.png","linkrepo":"https://github.com/leungjch/Magnetic-Pendulum","linkdemo":""},{"name":"Procedural Landscapes","keywords":"c++, sfml, midpoint-displacement","description":"An implementation of the midpoint displacement algorithm, used to create random landscapes. Features vivid, randomized colours and starry skies to simulate the aesthetic of sci-fi planetscapes.","img":"images/projects/procedural_landscapes.png","linkrepo":"https://github.com/leungjch/procedural-landscapes","linkdemo":""},{"name":"Pong Clone in C++","keywords":"c++, gamedev, sfml","description":"My first project: a Pong clone implemented in C++ using the SFML graphics library.","img":null,"linkrepo":"https://github.com/leungjch/SFMLPong","linkdemo":""}]}},"pageContext":{}},"staticQueryHashes":["1022643890","63159454"]}