{"componentChunkName":"component---src-templates-blog-post-js","path":"/time-capsule/","result":{"data":{"markdownRemark":{"html":"<p>Hi, you're reading my first blog post. I'm not sure if anyone will bother reading these - it would really depend on what sort of stuff I'm writing about and whether it's any interest to people. Anyways, I'll be starting university in less than two weeks and I'd like to create a pseudo time capsule for myself, outlining my goals for this website and for my own development so that someday I can look back on this writing and see how I had progressed.</p>\n<ol>\n<li><strong>Practice writing.</strong> Much of what I have learned about programming comes from blog posts providing neat tutorials of all sorts of things. Although I might use the blog to communicate some of my experiences, I think it would be more meaningful to be sharing technical knowledge that others could learn from, just as I have. Writing such articles would help me develop my technical writing skills. It has been said that being able to explain a concept to others in an intuitive way is a great indicator that you understand it, and this is what I'd like to achieve in my writing.</li>\n<li><strong>Taking notes</strong>. In high school, I never had a proper system of taking notes. It also didn't help that my handwriting was messy, sometimes to the point where I couldn't read it myself. I'll be going into university in less than two weeks now, and it's time to turn a new leaf here. University is expensive, so these undergrad courses better not go in one ear and out the other. I know I'll forget much regardless, but the best I can do is take meticulous notes in Markdown and host them in a repository. At the end of undergrad, it's my goal to have made notes for all courses which I can come back to and pull up digitally. It also feels nice that these course notes might be used by younger students after me (I have to double check whether uploading notes is academically acceptable though). </li>\n<li><strong>Project goals.</strong> I think I'm really lucky to have picked up programming early and more importantly, discovered the satisfaction that can be gained by building things by yourself. But as I approach university and a full time career, these projects have become more and more about building up a resume and not really programming for the sake of creativity. And I'm also running out of space to put all of these projects in a one-page resume anyways. So, my goal going forward with side projects is to commit to a larger-scale project that spans longer than a few days / weeks which hopefully have proven impact (users, stars, etc.). I'd also really like to work on a project collaboratively with someone, but I know this can be difficult to set up.</li>\n<li><strong>Open source contribution.</strong> This is something that I've always known about but never tried to do, mostly out of fear. But as I create more and more projects, I've realized that the majority of ideas I'd have are already thought up and implemented by others, and my impact is therefore diminished. That's fine, because most of the projects I've done are just for my own learning. But to make a more meaningful difference, I'd like to contribute to established projects too. By the end of next year, it is my goal to have made at least a few contributions to large open source software.</li>\n<li><strong>Becoming superuser.</strong> It was only a week ago that I switched to Linux (Ubuntu) after several years of using Windows. I never considered switching to Linux until a few months ago, when I realized that I never game anymore and most of the applications I use aren't Windows exclusive. In fact, I started to feel more and more that Windows was holding me back in terms of overcomplicating the installation of development tools, and seeing much nicer solutions on Linux or some nice Linux-only tool when I was trying too debug an obscure problem was the final straw that broke the camel's back for me. I still think Windows is nice - I kept a dual boot in case my studies or work somehow require a Windows only program or if I really miss those convenient MS Office or Adobe products. I'm still getting used to the differences, but I don't think I'll be going back. Jumping into Linux has forced me to become well-acquainted with the command line terminal way of doing things. I've picked up <strong>vim</strong> but I still currently feel inefficient with doing anything past simple scripts or markup, and I've been resorting to VS Code for larger projects. I'd like to see what <strong>emacs</strong> is all about too. The org-mode in particular interests me. </li>\n</ol>","frontmatter":{"title":"Time Capsule"}}},"pageContext":{"slug":"/time-capsule/"}},"staticQueryHashes":["3181172606"]}